openapi: 3.1.0
info:
  title: My Todo API
  version: 1.0.0
tags:
  - name: user
    description: User operations
  - name: todos
    description: Todos operations
  - name: request
    description: Request operations
components:
  schemas:
    RequestStatus:
      type: string
      enum:
        - pending
        - approved
        - rejected
    UserScalarFieldEnum:
      type: string
      enum:
        - id
        - name
    TodosScalarFieldEnum:
      type: string
      enum:
        - id
        - name
        - completed
        - createdAt
        - userId
    RequestScalarFieldEnum:
      type: string
      enum:
        - id
        - requesterId
        - targetUserId
        - status
        - message
        - createdAt
        - updatedAt
    SortOrder:
      type: string
      enum:
        - asc
        - desc
    QueryMode:
      type: string
      enum:
        - default
        - insensitive
    NullsOrder:
      type: string
      enum:
        - first
        - last
    User:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          type: array
          items:
            $ref: "#/components/schemas/Todos"
        sentRequests:
          type: array
          items:
            $ref: "#/components/schemas/Request"
        receivedRequests:
          type: array
          items:
            $ref: "#/components/schemas/Request"
      required:
        - id
    Todos:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/User"
        userId:
          type: string
      required:
        - id
        - name
        - completed
        - createdAt
        - user
        - userId
    Request:
      type: object
      properties:
        id:
          type: string
        requester:
          $ref: "#/components/schemas/User"
        requesterId:
          type: string
        targetUser:
          $ref: "#/components/schemas/User"
        targetUserId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - requester
        - requesterId
        - targetUser
        - targetUserId
        - status
        - createdAt
        - updatedAt
    UserWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosListRelationFilter"
        sentRequests:
          $ref: "#/components/schemas/RequestListRelationFilter"
        receivedRequests:
          $ref: "#/components/schemas/RequestListRelationFilter"
    UserOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        todos:
          $ref: "#/components/schemas/TodosOrderByRelationAggregateInput"
        sentRequests:
          $ref: "#/components/schemas/RequestOrderByRelationAggregateInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestOrderByRelationAggregateInput"
    UserWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosListRelationFilter"
        sentRequests:
          $ref: "#/components/schemas/RequestListRelationFilter"
        receivedRequests:
          $ref: "#/components/schemas/RequestListRelationFilter"
    UserScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
    TodosWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TodosWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        completed:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        user:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    TodosOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        completed:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        userId:
          $ref: "#/components/schemas/SortOrder"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    TodosWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TodosWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        completed:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        user:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    TodosScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TodosScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TodosScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TodosScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        completed:
          oneOf:
            - $ref: "#/components/schemas/BoolWithAggregatesFilter"
            - type: boolean
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
    RequestWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/RequestWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        requesterId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        targetUserId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumRequestStatusFilter"
            - $ref: "#/components/schemas/RequestStatus"
        message:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        requester:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
        targetUser:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    RequestOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        requesterId:
          $ref: "#/components/schemas/SortOrder"
        targetUserId:
          $ref: "#/components/schemas/SortOrder"
        status:
          $ref: "#/components/schemas/SortOrder"
        message:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        requester:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        targetUser:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    RequestWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/RequestWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereInput"
        requesterId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        targetUserId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumRequestStatusFilter"
            - $ref: "#/components/schemas/RequestStatus"
        message:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        requester:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
        targetUser:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    RequestScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/RequestScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/RequestScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/RequestScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        requesterId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        targetUserId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumRequestStatusWithAggregatesFilter"
            - $ref: "#/components/schemas/RequestStatus"
        message:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    UserCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          $ref: "#/components/schemas/TodosCreateNestedManyWithoutUserInput"
        sentRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutRequesterInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutTargetUserInput"
      required:
        - id
    UserUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosUpdateManyWithoutUserNestedInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutRequesterNestedInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutTargetUserNestedInput"
    UserCreateManyInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
      required:
        - id
    UserUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    TodosCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutTodosInput"
      required:
        - name
        - user
    TodosUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completed:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutTodosNestedInput"
    TodosCreateManyInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        userId:
          type: string
      required:
        - name
        - userId
    TodosUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completed:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    RequestCreateInput:
      type: object
      properties:
        id:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        requester:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutSentRequestsInput"
        targetUser:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutReceivedRequestsInput"
      required:
        - status
        - requester
        - targetUser
    RequestUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        requester:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutSentRequestsNestedInput"
        targetUser:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutReceivedRequestsNestedI\
            nput"
    RequestCreateManyInput:
      type: object
      properties:
        id:
          type: string
        requesterId:
          type: string
        targetUserId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - requesterId
        - targetUserId
        - status
    RequestUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    StringFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringFilter"
    StringNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableFilter"
            - type: "null"
    TodosListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/TodosWhereInput"
        some:
          $ref: "#/components/schemas/TodosWhereInput"
        none:
          $ref: "#/components/schemas/TodosWhereInput"
    RequestListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/RequestWhereInput"
        some:
          $ref: "#/components/schemas/RequestWhereInput"
        none:
          $ref: "#/components/schemas/RequestWhereInput"
    SortOrderInput:
      type: object
      properties:
        sort:
          $ref: "#/components/schemas/SortOrder"
        nulls:
          $ref: "#/components/schemas/NullsOrder"
      required:
        - sort
    TodosOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    RequestOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    StringWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    StringNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedStringNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedStringNullableFilter"
    BoolFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolFilter"
    DateTimeFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeFilter"
    UserScalarRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/UserWhereInput"
        isNot:
          $ref: "#/components/schemas/UserWhereInput"
    BoolWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedBoolFilter"
        _max:
          $ref: "#/components/schemas/NestedBoolFilter"
    DateTimeWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeFilter"
    EnumRequestStatusFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/RequestStatus"
        in:
          type: array
          items:
            $ref: "#/components/schemas/RequestStatus"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/RequestStatus"
        not:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/NestedEnumRequestStatusFilter"
    EnumRequestStatusWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/RequestStatus"
        in:
          type: array
          items:
            $ref: "#/components/schemas/RequestStatus"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/RequestStatus"
        not:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/NestedEnumRequestStatusWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumRequestStatusFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumRequestStatusFilter"
    TodosCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/TodosCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
    RequestCreateNestedManyWithoutRequesterInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateOrConnectWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateOrConnectWithoutRequesterInput"
        createMany:
          $ref: "#/components/schemas/RequestCreateManyRequesterInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
    RequestCreateNestedManyWithoutTargetUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateOrConnectWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateOrConnectWithoutTargetUserInput"
        createMany:
          $ref: "#/components/schemas/RequestCreateManyTargetUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
    TodosUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/TodosCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
    RequestUncheckedCreateNestedManyWithoutRequesterInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateOrConnectWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateOrConnectWithoutRequesterInput"
        createMany:
          $ref: "#/components/schemas/RequestCreateManyRequesterInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
    RequestUncheckedCreateNestedManyWithoutTargetUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateOrConnectWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateOrConnectWithoutTargetUserInput"
        createMany:
          $ref: "#/components/schemas/RequestCreateManyTargetUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
    StringFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
    NullableStringFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          oneOf:
            - type: "null"
            - type: string
    TodosUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TodosUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/TodosCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TodosUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TodosUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TodosScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosScalarWhereInput"
    RequestUpdateManyWithoutRequesterNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateOrConnectWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateOrConnectWithoutRequesterInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/RequestUpsertWithWhereUniqueWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpsertWithWhereUniqueWithoutRequesterInput"
        createMany:
          $ref: "#/components/schemas/RequestCreateManyRequesterInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateWithWhereUniqueWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpdateWithWhereUniqueWithoutRequesterInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateManyWithWhereWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpdateManyWithWhereWithoutRequesterInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/RequestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestScalarWhereInput"
    RequestUpdateManyWithoutTargetUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateOrConnectWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateOrConnectWithoutTargetUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/RequestUpsertWithWhereUniqueWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpsertWithWhereUniqueWithoutTargetUserInput"
        createMany:
          $ref: "#/components/schemas/RequestCreateManyTargetUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateWithWhereUniqueWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpdateWithWhereUniqueWithoutTargetUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateManyWithWhereWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpdateManyWithWhereWithoutTargetUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/RequestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestScalarWhereInput"
    TodosUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TodosUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/TodosCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TodosUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TodosUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TodosScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosScalarWhereInput"
    RequestUncheckedUpdateManyWithoutRequesterNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateOrConnectWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateOrConnectWithoutRequesterInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/RequestUpsertWithWhereUniqueWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpsertWithWhereUniqueWithoutRequesterInput"
        createMany:
          $ref: "#/components/schemas/RequestCreateManyRequesterInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateWithWhereUniqueWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpdateWithWhereUniqueWithoutRequesterInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateManyWithWhereWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpdateManyWithWhereWithoutRequesterInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/RequestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestScalarWhereInput"
    RequestUncheckedUpdateManyWithoutTargetUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateOrConnectWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateOrConnectWithoutTargetUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/RequestUpsertWithWhereUniqueWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpsertWithWhereUniqueWithoutTargetUserInput"
        createMany:
          $ref: "#/components/schemas/RequestCreateManyTargetUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateWithWhereUniqueWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpdateWithWhereUniqueWithoutTargetUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateManyWithWhereWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpdateManyWithWhereWithoutTargetUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/RequestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestScalarWhereInput"
    UserCreateNestedOneWithoutTodosInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTodosInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutTodosInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    BoolFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: boolean
    DateTimeFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
          format: date-time
    UserUpdateOneRequiredWithoutTodosNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTodosInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutTodosInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutTodosInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutTodosInput"
            - $ref: "#/components/schemas/UserUpdateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTodosInput"
    UserCreateNestedOneWithoutSentRequestsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSentRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSentRequestsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutSentRequestsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    UserCreateNestedOneWithoutReceivedRequestsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutReceivedRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutReceivedRequestsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutReceivedRequestsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    EnumRequestStatusFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          $ref: "#/components/schemas/RequestStatus"
    UserUpdateOneRequiredWithoutSentRequestsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSentRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSentRequestsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutSentRequestsInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutSentRequestsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutSentRequestsInput"
            - $ref: "#/components/schemas/UserUpdateWithoutSentRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSentRequestsInput"
    UserUpdateOneRequiredWithoutReceivedRequestsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutReceivedRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutReceivedRequestsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutReceivedRequestsInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutReceivedRequestsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutReceivedRequestsInpu\
                t"
            - $ref: "#/components/schemas/UserUpdateWithoutReceivedRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutReceivedRequestsInput"
    NestedStringFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringFilter"
    NestedStringNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableFilter"
            - type: "null"
    NestedStringWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    NestedIntFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntFilter"
    NestedStringNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedStringNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedStringNullableFilter"
    NestedIntNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: integer
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableFilter"
            - type: "null"
    NestedBoolFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolFilter"
    NestedDateTimeFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeFilter"
    NestedBoolWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedBoolFilter"
        _max:
          $ref: "#/components/schemas/NestedBoolFilter"
    NestedDateTimeWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeFilter"
    NestedEnumRequestStatusFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/RequestStatus"
        in:
          type: array
          items:
            $ref: "#/components/schemas/RequestStatus"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/RequestStatus"
        not:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/NestedEnumRequestStatusFilter"
    NestedEnumRequestStatusWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/RequestStatus"
        in:
          type: array
          items:
            $ref: "#/components/schemas/RequestStatus"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/RequestStatus"
        not:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/NestedEnumRequestStatusWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumRequestStatusFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumRequestStatusFilter"
    TodosCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
      required:
        - name
    TodosUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
      required:
        - name
    TodosCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodosWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    TodosCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    RequestCreateWithoutRequesterInput:
      type: object
      properties:
        id:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        targetUser:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutReceivedRequestsInput"
      required:
        - status
        - targetUser
    RequestUncheckedCreateWithoutRequesterInput:
      type: object
      properties:
        id:
          type: string
        targetUserId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - targetUserId
        - status
    RequestCreateOrConnectWithoutRequesterInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
      required:
        - where
        - create
    RequestCreateManyRequesterInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateManyRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateManyRequesterInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    RequestCreateWithoutTargetUserInput:
      type: object
      properties:
        id:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        requester:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutSentRequestsInput"
      required:
        - status
        - requester
    RequestUncheckedCreateWithoutTargetUserInput:
      type: object
      properties:
        id:
          type: string
        requesterId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - requesterId
        - status
    RequestCreateOrConnectWithoutTargetUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
      required:
        - where
        - create
    RequestCreateManyTargetUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateManyTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateManyTargetUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    TodosUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodosWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TodosUpdateWithoutUserInput"
            - $ref: "#/components/schemas/TodosUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    TodosUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodosWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TodosUpdateWithoutUserInput"
            - $ref: "#/components/schemas/TodosUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    TodosUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodosScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TodosUpdateManyMutationInput"
            - $ref: "#/components/schemas/TodosUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    TodosScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TodosScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TodosScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TodosScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        completed:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
    RequestUpsertWithWhereUniqueWithoutRequesterInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateWithoutRequesterInput"
            - $ref: "#/components/schemas/RequestUncheckedUpdateWithoutRequesterInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
      required:
        - where
        - update
        - create
    RequestUpdateWithWhereUniqueWithoutRequesterInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateWithoutRequesterInput"
            - $ref: "#/components/schemas/RequestUncheckedUpdateWithoutRequesterInput"
      required:
        - where
        - data
    RequestUpdateManyWithWhereWithoutRequesterInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateManyMutationInput"
            - $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutRequesterInput"
      required:
        - where
        - data
    RequestScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/RequestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/RequestScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/RequestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        requesterId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        targetUserId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumRequestStatusFilter"
            - $ref: "#/components/schemas/RequestStatus"
        message:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    RequestUpsertWithWhereUniqueWithoutTargetUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateWithoutTargetUserInput"
            - $ref: "#/components/schemas/RequestUncheckedUpdateWithoutTargetUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
      required:
        - where
        - update
        - create
    RequestUpdateWithWhereUniqueWithoutTargetUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateWithoutTargetUserInput"
            - $ref: "#/components/schemas/RequestUncheckedUpdateWithoutTargetUserInput"
      required:
        - where
        - data
    RequestUpdateManyWithWhereWithoutTargetUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateManyMutationInput"
            - $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutTargetUserInput"
      required:
        - where
        - data
    UserCreateWithoutTodosInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        sentRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutRequesterInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutTargetUserInput"
      required:
        - id
    UserUncheckedCreateWithoutTodosInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        sentRequests:
          $ref: "#/components/schemas/RequestUncheckedCreateNestedManyWithoutRequesterInp\
            ut"
        receivedRequests:
          $ref: "#/components/schemas/RequestUncheckedCreateNestedManyWithoutTargetUserIn\
            put"
      required:
        - id
    UserCreateOrConnectWithoutTodosInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTodosInput"
      required:
        - where
        - create
    UserUpsertWithoutTodosInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTodosInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTodosInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutTodosInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTodosInput"
      required:
        - data
    UserUpdateWithoutTodosInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutRequesterNestedInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutTargetUserNestedInput"
    UserUncheckedUpdateWithoutTodosInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentRequests:
          $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutRequesterNestedInp\
            ut"
        receivedRequests:
          $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutTargetUserNestedIn\
            put"
    UserCreateWithoutSentRequestsInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          $ref: "#/components/schemas/TodosCreateNestedManyWithoutUserInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutTargetUserInput"
      required:
        - id
    UserUncheckedCreateWithoutSentRequestsInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          $ref: "#/components/schemas/TodosUncheckedCreateNestedManyWithoutUserInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestUncheckedCreateNestedManyWithoutTargetUserIn\
            put"
      required:
        - id
    UserCreateOrConnectWithoutSentRequestsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSentRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSentRequestsInput"
      required:
        - where
        - create
    UserCreateWithoutReceivedRequestsInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          $ref: "#/components/schemas/TodosCreateNestedManyWithoutUserInput"
        sentRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutRequesterInput"
      required:
        - id
    UserUncheckedCreateWithoutReceivedRequestsInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          $ref: "#/components/schemas/TodosUncheckedCreateNestedManyWithoutUserInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUncheckedCreateNestedManyWithoutRequesterInp\
            ut"
      required:
        - id
    UserCreateOrConnectWithoutReceivedRequestsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutReceivedRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutReceivedRequestsInput"
      required:
        - where
        - create
    UserUpsertWithoutSentRequestsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutSentRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSentRequestsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSentRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSentRequestsInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutSentRequestsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutSentRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSentRequestsInput"
      required:
        - data
    UserUpdateWithoutSentRequestsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosUpdateManyWithoutUserNestedInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutTargetUserNestedInput"
    UserUncheckedUpdateWithoutSentRequestsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosUncheckedUpdateManyWithoutUserNestedInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutTargetUserNestedIn\
            put"
    UserUpsertWithoutReceivedRequestsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutReceivedRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutReceivedRequestsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutReceivedRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutReceivedRequestsInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutReceivedRequestsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutReceivedRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutReceivedRequestsInput"
      required:
        - data
    UserUpdateWithoutReceivedRequestsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosUpdateManyWithoutUserNestedInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutRequesterNestedInput"
    UserUncheckedUpdateWithoutReceivedRequestsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosUncheckedUpdateManyWithoutUserNestedInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutRequesterNestedInp\
            ut"
    TodosCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
      required:
        - name
    RequestCreateManyRequesterInput:
      type: object
      properties:
        id:
          type: string
        targetUserId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - targetUserId
        - status
    RequestCreateManyTargetUserInput:
      type: object
      properties:
        id:
          type: string
        requesterId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - requesterId
        - status
    TodosUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completed:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TodosUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completed:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TodosUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completed:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    RequestUpdateWithoutRequesterInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        targetUser:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutReceivedRequestsNestedI\
            nput"
    RequestUncheckedUpdateWithoutRequesterInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        targetUserId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    RequestUncheckedUpdateManyWithoutRequesterInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        targetUserId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    RequestUpdateWithoutTargetUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        requester:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutSentRequestsNestedInput"
    RequestUncheckedUpdateWithoutTargetUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        requesterId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    RequestUncheckedUpdateManyWithoutTargetUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        requesterId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    UserDefaultArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
    UserInclude:
      type: object
      properties:
        todos:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TodosFindManyArgs"
        sentRequests:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RequestFindManyArgs"
        receivedRequests:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RequestFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountOutputTypeDefaultArgs"
    TodosInclude:
      type: object
      properties:
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
    RequestInclude:
      type: object
      properties:
        requester:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
        targetUser:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
    UserCountOutputTypeSelect:
      type: object
      properties:
        todos:
          type: boolean
        sentRequests:
          type: boolean
        receivedRequests:
          type: boolean
    UserCountOutputTypeDefaultArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserCountOutputTypeSelect"
    UserSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        todos:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TodosFindManyArgs"
        sentRequests:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RequestFindManyArgs"
        receivedRequests:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RequestFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountOutputTypeDefaultArgs"
    TodosSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        completed:
          type: boolean
        createdAt:
          type: boolean
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
        userId:
          type: boolean
    RequestSelect:
      type: object
      properties:
        id:
          type: boolean
        requester:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
        requesterId:
          type: boolean
        targetUser:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
        targetUserId:
          type: boolean
        status:
          type: boolean
        message:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    UserCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        _all:
          type: boolean
    UserMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
    UserMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
    TodosCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        completed:
          type: boolean
        createdAt:
          type: boolean
        userId:
          type: boolean
        _all:
          type: boolean
    TodosMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        completed:
          type: boolean
        createdAt:
          type: boolean
        userId:
          type: boolean
    TodosMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        completed:
          type: boolean
        createdAt:
          type: boolean
        userId:
          type: boolean
    RequestCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        requesterId:
          type: boolean
        targetUserId:
          type: boolean
        status:
          type: boolean
        message:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        _all:
          type: boolean
    RequestMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        requesterId:
          type: boolean
        targetUserId:
          type: boolean
        status:
          type: boolean
        message:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    RequestMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        requesterId:
          type: boolean
        targetUserId:
          type: boolean
        status:
          type: boolean
        message:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    AggregateUser:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMaxAggregateOutputType"
    UserGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMaxAggregateOutputType"
      required:
        - id
    AggregateTodos:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TodosCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TodosMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TodosMaxAggregateOutputType"
    TodosGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        userId:
          type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TodosCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TodosMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TodosMaxAggregateOutputType"
      required:
        - id
        - name
        - completed
        - createdAt
        - userId
    AggregateRequest:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RequestCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RequestMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RequestMaxAggregateOutputType"
    RequestGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        requesterId:
          type: string
        targetUserId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RequestCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RequestMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RequestMaxAggregateOutputType"
      required:
        - id
        - requesterId
        - targetUserId
        - status
        - createdAt
        - updatedAt
    UserCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - _all
    UserMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
    UserMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
    TodosCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        completed:
          type: integer
        createdAt:
          type: integer
        userId:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - completed
        - createdAt
        - userId
        - _all
    TodosMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        completed:
          oneOf:
            - type: "null"
            - type: boolean
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        userId:
          oneOf:
            - type: "null"
            - type: string
    TodosMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        completed:
          oneOf:
            - type: "null"
            - type: boolean
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        userId:
          oneOf:
            - type: "null"
            - type: string
    RequestCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        requesterId:
          type: integer
        targetUserId:
          type: integer
        status:
          type: integer
        message:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        _all:
          type: integer
      required:
        - id
        - requesterId
        - targetUserId
        - status
        - message
        - createdAt
        - updatedAt
        - _all
    RequestMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        requesterId:
          oneOf:
            - type: "null"
            - type: string
        targetUserId:
          oneOf:
            - type: "null"
            - type: string
        status:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RequestStatus"
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    RequestMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        requesterId:
          oneOf:
            - type: "null"
            - type: string
        targetUserId:
          oneOf:
            - type: "null"
            - type: string
        status:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RequestStatus"
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    _Meta:
      type: object
      description: Meta information about the request or response
      properties:
        serialization:
          description: Serialization metadata
      additionalProperties: true
    _Error:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - message
          properties:
            prisma:
              type: boolean
              description: Indicates if the error occurred during a Prisma call
            rejectedByPolicy:
              type: boolean
              description: Indicates if the error was due to rejection by a policy
            code:
              type: string
              description: Prisma error code. Only available when "prisma" field is true.
            message:
              type: string
              description: Error message
            reason:
              type: string
              description: Detailed error reason
            zodErrors:
              type: object
              additionalProperties: true
              description: Zod validation errors if the error is due to data validation
                failure
          additionalProperties: true
    BatchPayload:
      type: object
      properties:
        count:
          type: integer
    UserCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        data:
          $ref: "#/components/schemas/UserCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/UserCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        data:
          $ref: "#/components/schemas/UserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          $ref: "#/components/schemas/UserUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          $ref: "#/components/schemas/UserCreateInput"
        update:
          $ref: "#/components/schemas/UserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountAggregateInput"
        _min:
          $ref: "#/components/schemas/UserMinAggregateInput"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/UserScalarFieldEnum"
        having:
          $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountAggregateInput"
        _min:
          $ref: "#/components/schemas/UserMinAggregateInput"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/TodosSelect"
        include:
          $ref: "#/components/schemas/TodosInclude"
        data:
          $ref: "#/components/schemas/TodosCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TodosSelect"
        include:
          $ref: "#/components/schemas/TodosInclude"
        where:
          $ref: "#/components/schemas/TodosWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TodosSelect"
        include:
          $ref: "#/components/schemas/TodosInclude"
        where:
          $ref: "#/components/schemas/TodosWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TodosSelect"
        include:
          $ref: "#/components/schemas/TodosInclude"
        where:
          $ref: "#/components/schemas/TodosWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/TodosSelect"
        include:
          $ref: "#/components/schemas/TodosInclude"
        where:
          $ref: "#/components/schemas/TodosWhereUniqueInput"
        data:
          $ref: "#/components/schemas/TodosUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/TodosWhereInput"
        data:
          $ref: "#/components/schemas/TodosUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/TodosSelect"
        include:
          $ref: "#/components/schemas/TodosInclude"
        where:
          $ref: "#/components/schemas/TodosWhereUniqueInput"
        create:
          $ref: "#/components/schemas/TodosCreateInput"
        update:
          $ref: "#/components/schemas/TodosUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TodosSelect"
        include:
          $ref: "#/components/schemas/TodosInclude"
        where:
          $ref: "#/components/schemas/TodosWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodosWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TodosSelect"
        where:
          $ref: "#/components/schemas/TodosWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodosWhereInput"
        orderBy:
          $ref: "#/components/schemas/TodosOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/TodosWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TodosCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TodosMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TodosMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodosWhereInput"
        orderBy:
          $ref: "#/components/schemas/TodosOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/TodosScalarFieldEnum"
        having:
          $ref: "#/components/schemas/TodosScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TodosCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TodosMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TodosMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/RequestSelect"
        include:
          $ref: "#/components/schemas/RequestInclude"
        data:
          $ref: "#/components/schemas/RequestCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/RequestSelect"
        include:
          $ref: "#/components/schemas/RequestInclude"
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/RequestSelect"
        include:
          $ref: "#/components/schemas/RequestInclude"
        where:
          $ref: "#/components/schemas/RequestWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/RequestSelect"
        include:
          $ref: "#/components/schemas/RequestInclude"
        where:
          $ref: "#/components/schemas/RequestWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/RequestSelect"
        include:
          $ref: "#/components/schemas/RequestInclude"
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        data:
          $ref: "#/components/schemas/RequestUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereInput"
        data:
          $ref: "#/components/schemas/RequestUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/RequestSelect"
        include:
          $ref: "#/components/schemas/RequestInclude"
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        create:
          $ref: "#/components/schemas/RequestCreateInput"
        update:
          $ref: "#/components/schemas/RequestUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/RequestSelect"
        include:
          $ref: "#/components/schemas/RequestInclude"
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/RequestSelect"
        where:
          $ref: "#/components/schemas/RequestWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereInput"
        orderBy:
          $ref: "#/components/schemas/RequestOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RequestCountAggregateInput"
        _min:
          $ref: "#/components/schemas/RequestMinAggregateInput"
        _max:
          $ref: "#/components/schemas/RequestMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereInput"
        orderBy:
          $ref: "#/components/schemas/RequestOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/RequestScalarFieldEnum"
        having:
          $ref: "#/components/schemas/RequestScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RequestCountAggregateInput"
        _min:
          $ref: "#/components/schemas/RequestMinAggregateInput"
        _max:
          $ref: "#/components/schemas/RequestMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
paths:
  /user/create:
    post:
      operationId: createUser
      description: Create a new User
      tags:
        - user
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateArgs"
  /user/createMany:
    post:
      operationId: createManyUser
      description: Create several User
      tags:
        - user
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateManyArgs"
  /user/findUnique:
    get:
      operationId: findUniqueUser
      description: Find one unique User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/findFirst:
    get:
      operationId: findFirstUser
      description: Find the first User matching the given condition
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/findMany:
    get:
      operationId: findManyUser
      description: Find a list of User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/update:
    patch:
      operationId: updateUser
      description: Update a User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateArgs"
  /user/updateMany:
    patch:
      operationId: updateManyUser
      description: Update Users matching the given condition
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateManyArgs"
  /user/upsert:
    post:
      operationId: upsertUser
      description: Upsert a User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpsertArgs"
  /user/delete:
    delete:
      operationId: deleteUser
      description: Delete one unique User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/deleteMany:
    delete:
      operationId: deleteManyUser
      description: Delete Users matching the given condition
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/count:
    get:
      operationId: countUser
      description: Find a list of User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/UserCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/aggregate:
    get:
      operationId: aggregateUser
      description: Aggregate Users
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateUser"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/groupBy:
    get:
      operationId: groupByUser
      description: Group Users by fields
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /todos/create:
    post:
      operationId: createTodos
      description: Create a new Todos
      tags:
        - todos
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Todos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodosCreateArgs"
  /todos/createMany:
    post:
      operationId: createManyTodos
      description: Create several Todos
      tags:
        - todos
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodosCreateManyArgs"
  /todos/findUnique:
    get:
      operationId: findUniqueTodos
      description: Find one unique Todos
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Todos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodosFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /todos/findFirst:
    get:
      operationId: findFirstTodos
      description: Find the first Todos matching the given condition
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Todos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodosFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /todos/findMany:
    get:
      operationId: findManyTodos
      description: Find a list of Todos
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Todos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodosFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /todos/update:
    patch:
      operationId: updateTodos
      description: Update a Todos
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Todos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodosUpdateArgs"
  /todos/updateMany:
    patch:
      operationId: updateManyTodos
      description: Update Todoss matching the given condition
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodosUpdateManyArgs"
  /todos/upsert:
    post:
      operationId: upsertTodos
      description: Upsert a Todos
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Todos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodosUpsertArgs"
  /todos/delete:
    delete:
      operationId: deleteTodos
      description: Delete one unique Todos
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Todos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodosDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /todos/deleteMany:
    delete:
      operationId: deleteManyTodos
      description: Delete Todoss matching the given condition
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodosDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /todos/count:
    get:
      operationId: countTodos
      description: Find a list of Todos
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/TodosCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodosCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /todos/aggregate:
    get:
      operationId: aggregateTodos
      description: Aggregate Todoss
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateTodos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodosAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /todos/groupBy:
    get:
      operationId: groupByTodos
      description: Group Todoss by fields
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TodosGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodosGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /request/create:
    post:
      operationId: createRequest
      description: Create a new Request
      tags:
        - request
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Request"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestCreateArgs"
  /request/createMany:
    post:
      operationId: createManyRequest
      description: Create several Request
      tags:
        - request
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestCreateManyArgs"
  /request/findUnique:
    get:
      operationId: findUniqueRequest
      description: Find one unique Request
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Request"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /request/findFirst:
    get:
      operationId: findFirstRequest
      description: Find the first Request matching the given condition
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Request"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /request/findMany:
    get:
      operationId: findManyRequest
      description: Find a list of Request
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Request"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /request/update:
    patch:
      operationId: updateRequest
      description: Update a Request
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Request"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestUpdateArgs"
  /request/updateMany:
    patch:
      operationId: updateManyRequest
      description: Update Requests matching the given condition
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestUpdateManyArgs"
  /request/upsert:
    post:
      operationId: upsertRequest
      description: Upsert a Request
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Request"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestUpsertArgs"
  /request/delete:
    delete:
      operationId: deleteRequest
      description: Delete one unique Request
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Request"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /request/deleteMany:
    delete:
      operationId: deleteManyRequest
      description: Delete Requests matching the given condition
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /request/count:
    get:
      operationId: countRequest
      description: Find a list of Request
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/RequestCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /request/aggregate:
    get:
      operationId: aggregateRequest
      description: Aggregate Requests
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateRequest"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /request/groupBy:
    get:
      operationId: groupByRequest
      description: Group Requests by fields
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/RequestGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
