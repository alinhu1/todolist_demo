openapi: 3.1.0
info:
  title: My Todo API
  version: 1.0.0
tags:
  - name: user
    description: User operations
  - name: todos
    description: Todos operations
  - name: request
    description: Request operations
  - name: teamTodos
    description: TeamTodos operations
  - name: team
    description: Team operations
  - name: teamMember
    description: TeamMember operations
  - name: teamRequest
    description: TeamRequest operations
components:
  schemas:
    RequestStatus:
      type: string
      enum:
        - pending
        - approved
        - rejected
    TeamRole:
      type: string
      enum:
        - MEMBER
        - ADMIN
    UserScalarFieldEnum:
      type: string
      enum:
        - id
        - name
    TodosScalarFieldEnum:
      type: string
      enum:
        - id
        - name
        - completed
        - createdAt
        - userId
    RequestScalarFieldEnum:
      type: string
      enum:
        - id
        - message
        - createdAt
        - updatedAt
        - requesterId
        - targetUserId
        - status
    TeamTodosScalarFieldEnum:
      type: string
      enum:
        - id
        - name
        - completed
        - createdAt
        - creatorId
        - teamId
    TeamScalarFieldEnum:
      type: string
      enum:
        - id
        - name
        - createdAt
        - createdById
    TeamMemberScalarFieldEnum:
      type: string
      enum:
        - id
        - teamId
        - userId
        - role
    TeamRequestScalarFieldEnum:
      type: string
      enum:
        - id
        - message
        - createdAt
        - updatedAt
        - teamId
        - requesterId
        - status
    SortOrder:
      type: string
      enum:
        - asc
        - desc
    QueryMode:
      type: string
      enum:
        - default
        - insensitive
    NullsOrder:
      type: string
      enum:
        - first
        - last
    User:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          type: array
          items:
            $ref: "#/components/schemas/Todos"
        sentRequests:
          type: array
          items:
            $ref: "#/components/schemas/Request"
        receivedRequests:
          type: array
          items:
            $ref: "#/components/schemas/Request"
        teamMember:
          type: array
          items:
            $ref: "#/components/schemas/TeamMember"
        createTeamTodos:
          type: array
          items:
            $ref: "#/components/schemas/TeamTodos"
        ownedTeams:
          type: array
          items:
            $ref: "#/components/schemas/Team"
        teamRequests:
          type: array
          items:
            $ref: "#/components/schemas/TeamRequest"
      required:
        - id
    Todos:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/User"
        userId:
          type: string
      required:
        - id
        - name
        - completed
        - createdAt
        - user
        - userId
    Request:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        requester:
          $ref: "#/components/schemas/User"
        requesterId:
          type: string
        targetUser:
          $ref: "#/components/schemas/User"
        targetUserId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
      required:
        - id
        - createdAt
        - updatedAt
        - requester
        - requesterId
        - targetUser
        - targetUserId
        - status
    TeamTodos:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        creator:
          $ref: "#/components/schemas/User"
        creatorId:
          type: string
        team:
          $ref: "#/components/schemas/Team"
        teamId:
          type: string
      required:
        - id
        - name
        - completed
        - createdAt
        - creator
        - creatorId
        - team
        - teamId
    Team:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        createdBy:
          $ref: "#/components/schemas/User"
        createdById:
          type: string
        members:
          type: array
          items:
            $ref: "#/components/schemas/TeamMember"
        todos:
          type: array
          items:
            $ref: "#/components/schemas/TeamTodos"
        requests:
          type: array
          items:
            $ref: "#/components/schemas/TeamRequest"
      required:
        - id
        - name
        - createdAt
        - createdBy
        - createdById
    TeamMember:
      type: object
      properties:
        id:
          type: string
        team:
          $ref: "#/components/schemas/Team"
        teamId:
          type: string
        user:
          $ref: "#/components/schemas/User"
        userId:
          type: string
        role:
          $ref: "#/components/schemas/TeamRole"
      required:
        - id
        - team
        - teamId
        - user
        - userId
        - role
    TeamRequest:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        team:
          $ref: "#/components/schemas/Team"
        teamId:
          type: string
        requester:
          $ref: "#/components/schemas/User"
        requesterId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
      required:
        - id
        - createdAt
        - updatedAt
        - team
        - teamId
        - requester
        - requesterId
        - status
    UserWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosListRelationFilter"
        sentRequests:
          $ref: "#/components/schemas/RequestListRelationFilter"
        receivedRequests:
          $ref: "#/components/schemas/RequestListRelationFilter"
        teamMember:
          $ref: "#/components/schemas/TeamMemberListRelationFilter"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosListRelationFilter"
        ownedTeams:
          $ref: "#/components/schemas/TeamListRelationFilter"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestListRelationFilter"
    UserOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        todos:
          $ref: "#/components/schemas/TodosOrderByRelationAggregateInput"
        sentRequests:
          $ref: "#/components/schemas/RequestOrderByRelationAggregateInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestOrderByRelationAggregateInput"
        teamMember:
          $ref: "#/components/schemas/TeamMemberOrderByRelationAggregateInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosOrderByRelationAggregateInput"
        ownedTeams:
          $ref: "#/components/schemas/TeamOrderByRelationAggregateInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestOrderByRelationAggregateInput"
    UserWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosListRelationFilter"
        sentRequests:
          $ref: "#/components/schemas/RequestListRelationFilter"
        receivedRequests:
          $ref: "#/components/schemas/RequestListRelationFilter"
        teamMember:
          $ref: "#/components/schemas/TeamMemberListRelationFilter"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosListRelationFilter"
        ownedTeams:
          $ref: "#/components/schemas/TeamListRelationFilter"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestListRelationFilter"
    UserScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
    TodosWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TodosWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        completed:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        user:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    TodosOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        completed:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        userId:
          $ref: "#/components/schemas/SortOrder"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    TodosWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TodosWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        completed:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        user:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    TodosScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TodosScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TodosScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TodosScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        completed:
          oneOf:
            - $ref: "#/components/schemas/BoolWithAggregatesFilter"
            - type: boolean
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
    RequestWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/RequestWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        message:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        requesterId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        targetUserId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumRequestStatusFilter"
            - $ref: "#/components/schemas/RequestStatus"
        requester:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
        targetUser:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    RequestOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        message:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        requesterId:
          $ref: "#/components/schemas/SortOrder"
        targetUserId:
          $ref: "#/components/schemas/SortOrder"
        status:
          $ref: "#/components/schemas/SortOrder"
        requester:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        targetUser:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    RequestWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/RequestWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereInput"
        message:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        requesterId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        targetUserId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumRequestStatusFilter"
            - $ref: "#/components/schemas/RequestStatus"
        requester:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
        targetUser:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    RequestScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/RequestScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/RequestScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/RequestScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        message:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        requesterId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        targetUserId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumRequestStatusWithAggregatesFilter"
            - $ref: "#/components/schemas/RequestStatus"
    TeamTodosWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TeamTodosWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        completed:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        creatorId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        teamId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        creator:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
        team:
          oneOf:
            - $ref: "#/components/schemas/TeamScalarRelationFilter"
            - $ref: "#/components/schemas/TeamWhereInput"
    TeamTodosOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        completed:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        creatorId:
          $ref: "#/components/schemas/SortOrder"
        teamId:
          $ref: "#/components/schemas/SortOrder"
        creator:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        team:
          $ref: "#/components/schemas/TeamOrderByWithRelationInput"
    TeamTodosWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TeamTodosWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        completed:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        creatorId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        teamId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        creator:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
        team:
          oneOf:
            - $ref: "#/components/schemas/TeamScalarRelationFilter"
            - $ref: "#/components/schemas/TeamWhereInput"
    TeamTodosScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TeamTodosScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        completed:
          oneOf:
            - $ref: "#/components/schemas/BoolWithAggregatesFilter"
            - type: boolean
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        creatorId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        teamId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
    TeamWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TeamWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TeamWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TeamWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdBy:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
        members:
          $ref: "#/components/schemas/TeamMemberListRelationFilter"
        todos:
          $ref: "#/components/schemas/TeamTodosListRelationFilter"
        requests:
          $ref: "#/components/schemas/TeamRequestListRelationFilter"
    TeamOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        createdById:
          $ref: "#/components/schemas/SortOrder"
        createdBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        members:
          $ref: "#/components/schemas/TeamMemberOrderByRelationAggregateInput"
        todos:
          $ref: "#/components/schemas/TeamTodosOrderByRelationAggregateInput"
        requests:
          $ref: "#/components/schemas/TeamRequestOrderByRelationAggregateInput"
    TeamWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/TeamWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TeamWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TeamWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamWhereInput"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdBy:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
        members:
          $ref: "#/components/schemas/TeamMemberListRelationFilter"
        todos:
          $ref: "#/components/schemas/TeamTodosListRelationFilter"
        requests:
          $ref: "#/components/schemas/TeamRequestListRelationFilter"
    TeamScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TeamScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TeamScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TeamScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
    TeamMemberWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TeamMemberWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        teamId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        role:
          oneOf:
            - $ref: "#/components/schemas/EnumTeamRoleFilter"
            - $ref: "#/components/schemas/TeamRole"
        team:
          oneOf:
            - $ref: "#/components/schemas/TeamScalarRelationFilter"
            - $ref: "#/components/schemas/TeamWhereInput"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    TeamMemberOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        teamId:
          $ref: "#/components/schemas/SortOrder"
        userId:
          $ref: "#/components/schemas/SortOrder"
        role:
          $ref: "#/components/schemas/SortOrder"
        team:
          $ref: "#/components/schemas/TeamOrderByWithRelationInput"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    TeamMemberWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TeamMemberWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereInput"
        teamId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        role:
          oneOf:
            - $ref: "#/components/schemas/EnumTeamRoleFilter"
            - $ref: "#/components/schemas/TeamRole"
        team:
          oneOf:
            - $ref: "#/components/schemas/TeamScalarRelationFilter"
            - $ref: "#/components/schemas/TeamWhereInput"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    TeamMemberScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TeamMemberScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        teamId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        role:
          oneOf:
            - $ref: "#/components/schemas/EnumTeamRoleWithAggregatesFilter"
            - $ref: "#/components/schemas/TeamRole"
    TeamRequestWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TeamRequestWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        message:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        teamId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        requesterId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumRequestStatusFilter"
            - $ref: "#/components/schemas/RequestStatus"
        team:
          oneOf:
            - $ref: "#/components/schemas/TeamScalarRelationFilter"
            - $ref: "#/components/schemas/TeamWhereInput"
        requester:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    TeamRequestOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        message:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        teamId:
          $ref: "#/components/schemas/SortOrder"
        requesterId:
          $ref: "#/components/schemas/SortOrder"
        status:
          $ref: "#/components/schemas/SortOrder"
        team:
          $ref: "#/components/schemas/TeamOrderByWithRelationInput"
        requester:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    TeamRequestWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TeamRequestWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereInput"
        message:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        teamId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        requesterId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumRequestStatusFilter"
            - $ref: "#/components/schemas/RequestStatus"
        team:
          oneOf:
            - $ref: "#/components/schemas/TeamScalarRelationFilter"
            - $ref: "#/components/schemas/TeamWhereInput"
        requester:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    TeamRequestScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TeamRequestScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        message:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        teamId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        requesterId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumRequestStatusWithAggregatesFilter"
            - $ref: "#/components/schemas/RequestStatus"
    UserCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          $ref: "#/components/schemas/TodosCreateNestedManyWithoutUserInput"
        sentRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutRequesterInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutTargetUserInput"
        teamMember:
          $ref: "#/components/schemas/TeamMemberCreateNestedManyWithoutUserInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosCreateNestedManyWithoutCreatorInput"
        ownedTeams:
          $ref: "#/components/schemas/TeamCreateNestedManyWithoutCreatedByInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestCreateNestedManyWithoutRequesterInput"
      required:
        - id
    UserUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosUpdateManyWithoutUserNestedInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutRequesterNestedInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutTargetUserNestedInput"
        teamMember:
          $ref: "#/components/schemas/TeamMemberUpdateManyWithoutUserNestedInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosUpdateManyWithoutCreatorNestedInput"
        ownedTeams:
          $ref: "#/components/schemas/TeamUpdateManyWithoutCreatedByNestedInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestUpdateManyWithoutRequesterNestedInput"
    UserCreateManyInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
      required:
        - id
    UserUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    TodosCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutTodosInput"
      required:
        - name
        - user
    TodosUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completed:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutTodosNestedInput"
    TodosCreateManyInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        userId:
          type: string
      required:
        - name
        - userId
    TodosUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completed:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    RequestCreateInput:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        status:
          $ref: "#/components/schemas/RequestStatus"
        requester:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutSentRequestsInput"
        targetUser:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutReceivedRequestsInput"
      required:
        - status
        - requester
        - targetUser
    RequestUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
        requester:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutSentRequestsNestedInput"
        targetUser:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutReceivedRequestsNestedI\
            nput"
    RequestCreateManyInput:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        requesterId:
          type: string
        targetUserId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
      required:
        - requesterId
        - targetUserId
        - status
    RequestUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
    TeamTodosCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        creator:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutCreateTeamTodosInput"
        team:
          $ref: "#/components/schemas/TeamCreateNestedOneWithoutTodosInput"
      required:
        - name
        - creator
        - team
    TeamTodosUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completed:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        creator:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutCreateTeamTodosNestedIn\
            put"
        team:
          $ref: "#/components/schemas/TeamUpdateOneRequiredWithoutTodosNestedInput"
    TeamTodosCreateManyInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        creatorId:
          type: string
        teamId:
          type: string
      required:
        - name
        - creatorId
        - teamId
    TeamTodosUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completed:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TeamCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        createdBy:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutOwnedTeamsInput"
        members:
          $ref: "#/components/schemas/TeamMemberCreateNestedManyWithoutTeamInput"
        todos:
          $ref: "#/components/schemas/TeamTodosCreateNestedManyWithoutTeamInput"
        requests:
          $ref: "#/components/schemas/TeamRequestCreateNestedManyWithoutTeamInput"
      required:
        - name
        - createdBy
    TeamUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdBy:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutOwnedTeamsNestedInput"
        members:
          $ref: "#/components/schemas/TeamMemberUpdateManyWithoutTeamNestedInput"
        todos:
          $ref: "#/components/schemas/TeamTodosUpdateManyWithoutTeamNestedInput"
        requests:
          $ref: "#/components/schemas/TeamRequestUpdateManyWithoutTeamNestedInput"
    TeamCreateManyInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        createdById:
          type: string
      required:
        - name
        - createdById
    TeamUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TeamMemberCreateInput:
      type: object
      properties:
        id:
          type: string
        role:
          $ref: "#/components/schemas/TeamRole"
        team:
          $ref: "#/components/schemas/TeamCreateNestedOneWithoutMembersInput"
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutTeamMemberInput"
      required:
        - team
        - user
    TeamMemberUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/TeamRole"
            - $ref: "#/components/schemas/EnumTeamRoleFieldUpdateOperationsInput"
        team:
          $ref: "#/components/schemas/TeamUpdateOneRequiredWithoutMembersNestedInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutTeamMemberNestedInput"
    TeamMemberCreateManyInput:
      type: object
      properties:
        id:
          type: string
        teamId:
          type: string
        userId:
          type: string
        role:
          $ref: "#/components/schemas/TeamRole"
      required:
        - teamId
        - userId
    TeamMemberUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/TeamRole"
            - $ref: "#/components/schemas/EnumTeamRoleFieldUpdateOperationsInput"
    TeamRequestCreateInput:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        status:
          $ref: "#/components/schemas/RequestStatus"
        team:
          $ref: "#/components/schemas/TeamCreateNestedOneWithoutRequestsInput"
        requester:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutTeamRequestsInput"
      required:
        - team
        - requester
    TeamRequestUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
        team:
          $ref: "#/components/schemas/TeamUpdateOneRequiredWithoutRequestsNestedInput"
        requester:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutTeamRequestsNestedInput"
    TeamRequestCreateManyInput:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        teamId:
          type: string
        requesterId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
      required:
        - teamId
        - requesterId
    TeamRequestUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
    StringFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringFilter"
    StringNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableFilter"
            - type: "null"
    TodosListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/TodosWhereInput"
        some:
          $ref: "#/components/schemas/TodosWhereInput"
        none:
          $ref: "#/components/schemas/TodosWhereInput"
    RequestListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/RequestWhereInput"
        some:
          $ref: "#/components/schemas/RequestWhereInput"
        none:
          $ref: "#/components/schemas/RequestWhereInput"
    TeamMemberListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/TeamMemberWhereInput"
        some:
          $ref: "#/components/schemas/TeamMemberWhereInput"
        none:
          $ref: "#/components/schemas/TeamMemberWhereInput"
    TeamTodosListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/TeamTodosWhereInput"
        some:
          $ref: "#/components/schemas/TeamTodosWhereInput"
        none:
          $ref: "#/components/schemas/TeamTodosWhereInput"
    TeamListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/TeamWhereInput"
        some:
          $ref: "#/components/schemas/TeamWhereInput"
        none:
          $ref: "#/components/schemas/TeamWhereInput"
    TeamRequestListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/TeamRequestWhereInput"
        some:
          $ref: "#/components/schemas/TeamRequestWhereInput"
        none:
          $ref: "#/components/schemas/TeamRequestWhereInput"
    SortOrderInput:
      type: object
      properties:
        sort:
          $ref: "#/components/schemas/SortOrder"
        nulls:
          $ref: "#/components/schemas/NullsOrder"
      required:
        - sort
    TodosOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    RequestOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    TeamMemberOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    TeamTodosOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    TeamOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    TeamRequestOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    StringWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    StringNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedStringNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedStringNullableFilter"
    BoolFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolFilter"
    DateTimeFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeFilter"
    UserScalarRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/UserWhereInput"
        isNot:
          $ref: "#/components/schemas/UserWhereInput"
    BoolWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedBoolFilter"
        _max:
          $ref: "#/components/schemas/NestedBoolFilter"
    DateTimeWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeFilter"
    EnumRequestStatusFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/RequestStatus"
        in:
          type: array
          items:
            $ref: "#/components/schemas/RequestStatus"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/RequestStatus"
        not:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/NestedEnumRequestStatusFilter"
    EnumRequestStatusWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/RequestStatus"
        in:
          type: array
          items:
            $ref: "#/components/schemas/RequestStatus"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/RequestStatus"
        not:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/NestedEnumRequestStatusWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumRequestStatusFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumRequestStatusFilter"
    TeamScalarRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/TeamWhereInput"
        isNot:
          $ref: "#/components/schemas/TeamWhereInput"
    EnumTeamRoleFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/TeamRole"
        in:
          type: array
          items:
            $ref: "#/components/schemas/TeamRole"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/TeamRole"
        not:
          oneOf:
            - $ref: "#/components/schemas/TeamRole"
            - $ref: "#/components/schemas/NestedEnumTeamRoleFilter"
    EnumTeamRoleWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/TeamRole"
        in:
          type: array
          items:
            $ref: "#/components/schemas/TeamRole"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/TeamRole"
        not:
          oneOf:
            - $ref: "#/components/schemas/TeamRole"
            - $ref: "#/components/schemas/NestedEnumTeamRoleWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumTeamRoleFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumTeamRoleFilter"
    TodosCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/TodosCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
    RequestCreateNestedManyWithoutRequesterInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateOrConnectWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateOrConnectWithoutRequesterInput"
        createMany:
          $ref: "#/components/schemas/RequestCreateManyRequesterInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
    RequestCreateNestedManyWithoutTargetUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateOrConnectWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateOrConnectWithoutTargetUserInput"
        createMany:
          $ref: "#/components/schemas/RequestCreateManyTargetUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
    TeamMemberCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberCreateWithoutUserInput"
            - $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/TeamMemberCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
    TeamTodosCreateNestedManyWithoutCreatorInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateWithoutCreatorInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosCreateWithoutCreatorInput"
            - $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutCreatorInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutCreatorInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateOrConnectWithoutCreatorInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosCreateOrConnectWithoutCreatorInput"
        createMany:
          $ref: "#/components/schemas/TeamTodosCreateManyCreatorInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
    TeamCreateNestedManyWithoutCreatedByInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamCreateWithoutCreatedByInput"
            - $ref: "#/components/schemas/TeamUncheckedCreateWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamUncheckedCreateWithoutCreatedByInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateOrConnectWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamCreateOrConnectWithoutCreatedByInput"
        createMany:
          $ref: "#/components/schemas/TeamCreateManyCreatedByInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamWhereUniqueInput"
    TeamRequestCreateNestedManyWithoutRequesterInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestCreateWithoutRequesterInput"
            - $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutRequesterInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateOrConnectWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestCreateOrConnectWithoutRequesterInput"
        createMany:
          $ref: "#/components/schemas/TeamRequestCreateManyRequesterInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
    TodosUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/TodosCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
    RequestUncheckedCreateNestedManyWithoutRequesterInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateOrConnectWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateOrConnectWithoutRequesterInput"
        createMany:
          $ref: "#/components/schemas/RequestCreateManyRequesterInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
    RequestUncheckedCreateNestedManyWithoutTargetUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateOrConnectWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateOrConnectWithoutTargetUserInput"
        createMany:
          $ref: "#/components/schemas/RequestCreateManyTargetUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
    TeamMemberUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberCreateWithoutUserInput"
            - $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/TeamMemberCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
    TeamTodosUncheckedCreateNestedManyWithoutCreatorInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateWithoutCreatorInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosCreateWithoutCreatorInput"
            - $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutCreatorInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutCreatorInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateOrConnectWithoutCreatorInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosCreateOrConnectWithoutCreatorInput"
        createMany:
          $ref: "#/components/schemas/TeamTodosCreateManyCreatorInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
    TeamUncheckedCreateNestedManyWithoutCreatedByInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamCreateWithoutCreatedByInput"
            - $ref: "#/components/schemas/TeamUncheckedCreateWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamUncheckedCreateWithoutCreatedByInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateOrConnectWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamCreateOrConnectWithoutCreatedByInput"
        createMany:
          $ref: "#/components/schemas/TeamCreateManyCreatedByInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamWhereUniqueInput"
    TeamRequestUncheckedCreateNestedManyWithoutRequesterInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestCreateWithoutRequesterInput"
            - $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutRequesterInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateOrConnectWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestCreateOrConnectWithoutRequesterInput"
        createMany:
          $ref: "#/components/schemas/TeamRequestCreateManyRequesterInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
    StringFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
    NullableStringFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          oneOf:
            - type: "null"
            - type: string
    TodosUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TodosUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/TodosCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TodosUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TodosUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TodosScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosScalarWhereInput"
    RequestUpdateManyWithoutRequesterNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateOrConnectWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateOrConnectWithoutRequesterInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/RequestUpsertWithWhereUniqueWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpsertWithWhereUniqueWithoutRequesterInput"
        createMany:
          $ref: "#/components/schemas/RequestCreateManyRequesterInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateWithWhereUniqueWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpdateWithWhereUniqueWithoutRequesterInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateManyWithWhereWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpdateManyWithWhereWithoutRequesterInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/RequestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestScalarWhereInput"
    RequestUpdateManyWithoutTargetUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateOrConnectWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateOrConnectWithoutTargetUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/RequestUpsertWithWhereUniqueWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpsertWithWhereUniqueWithoutTargetUserInput"
        createMany:
          $ref: "#/components/schemas/RequestCreateManyTargetUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateWithWhereUniqueWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpdateWithWhereUniqueWithoutTargetUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateManyWithWhereWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpdateManyWithWhereWithoutTargetUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/RequestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestScalarWhereInput"
    TeamMemberUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberCreateWithoutUserInput"
            - $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/TeamMemberCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberScalarWhereInput"
    TeamTodosUpdateManyWithoutCreatorNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateWithoutCreatorInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosCreateWithoutCreatorInput"
            - $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutCreatorInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutCreatorInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateOrConnectWithoutCreatorInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosCreateOrConnectWithoutCreatorInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosUpsertWithWhereUniqueWithoutCreatorInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUpsertWithWhereUniqueWithoutCreatorInput"
        createMany:
          $ref: "#/components/schemas/TeamTodosCreateManyCreatorInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosUpdateWithWhereUniqueWithoutCreatorInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUpdateWithWhereUniqueWithoutCreatorInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosUpdateManyWithWhereWithoutCreatorInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUpdateManyWithWhereWithoutCreatorInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosScalarWhereInput"
    TeamUpdateManyWithoutCreatedByNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamCreateWithoutCreatedByInput"
            - $ref: "#/components/schemas/TeamUncheckedCreateWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamUncheckedCreateWithoutCreatedByInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateOrConnectWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamCreateOrConnectWithoutCreatedByInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TeamUpsertWithWhereUniqueWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamUpsertWithWhereUniqueWithoutCreatedByInput"
        createMany:
          $ref: "#/components/schemas/TeamCreateManyCreatedByInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TeamWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TeamWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TeamWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamUpdateWithWhereUniqueWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamUpdateWithWhereUniqueWithoutCreatedByInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TeamUpdateManyWithWhereWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamUpdateManyWithWhereWithoutCreatedByInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TeamScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamScalarWhereInput"
    TeamRequestUpdateManyWithoutRequesterNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestCreateWithoutRequesterInput"
            - $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutRequesterInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateOrConnectWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestCreateOrConnectWithoutRequesterInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestUpsertWithWhereUniqueWithoutRequesterInp\
                ut"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUpsertWithWhereUniqueWithoutRequesterInp\
                  ut"
        createMany:
          $ref: "#/components/schemas/TeamRequestCreateManyRequesterInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestUpdateWithWhereUniqueWithoutRequesterInp\
                ut"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUpdateWithWhereUniqueWithoutRequesterInp\
                  ut"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestUpdateManyWithWhereWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUpdateManyWithWhereWithoutRequesterInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestScalarWhereInput"
    TodosUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TodosUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/TodosCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TodosUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TodosUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TodosScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosScalarWhereInput"
    RequestUncheckedUpdateManyWithoutRequesterNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateOrConnectWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateOrConnectWithoutRequesterInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/RequestUpsertWithWhereUniqueWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpsertWithWhereUniqueWithoutRequesterInput"
        createMany:
          $ref: "#/components/schemas/RequestCreateManyRequesterInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateWithWhereUniqueWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpdateWithWhereUniqueWithoutRequesterInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateManyWithWhereWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpdateManyWithWhereWithoutRequesterInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/RequestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestScalarWhereInput"
    RequestUncheckedUpdateManyWithoutTargetUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateOrConnectWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateOrConnectWithoutTargetUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/RequestUpsertWithWhereUniqueWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpsertWithWhereUniqueWithoutTargetUserInput"
        createMany:
          $ref: "#/components/schemas/RequestCreateManyTargetUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateWithWhereUniqueWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpdateWithWhereUniqueWithoutTargetUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateManyWithWhereWithoutTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestUpdateManyWithWhereWithoutTargetUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/RequestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestScalarWhereInput"
    TeamMemberUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberCreateWithoutUserInput"
            - $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/TeamMemberCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberScalarWhereInput"
    TeamTodosUncheckedUpdateManyWithoutCreatorNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateWithoutCreatorInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosCreateWithoutCreatorInput"
            - $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutCreatorInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutCreatorInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateOrConnectWithoutCreatorInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosCreateOrConnectWithoutCreatorInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosUpsertWithWhereUniqueWithoutCreatorInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUpsertWithWhereUniqueWithoutCreatorInput"
        createMany:
          $ref: "#/components/schemas/TeamTodosCreateManyCreatorInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosUpdateWithWhereUniqueWithoutCreatorInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUpdateWithWhereUniqueWithoutCreatorInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosUpdateManyWithWhereWithoutCreatorInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUpdateManyWithWhereWithoutCreatorInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosScalarWhereInput"
    TeamUncheckedUpdateManyWithoutCreatedByNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamCreateWithoutCreatedByInput"
            - $ref: "#/components/schemas/TeamUncheckedCreateWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamUncheckedCreateWithoutCreatedByInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateOrConnectWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamCreateOrConnectWithoutCreatedByInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TeamUpsertWithWhereUniqueWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamUpsertWithWhereUniqueWithoutCreatedByInput"
        createMany:
          $ref: "#/components/schemas/TeamCreateManyCreatedByInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TeamWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TeamWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TeamWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamUpdateWithWhereUniqueWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamUpdateWithWhereUniqueWithoutCreatedByInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TeamUpdateManyWithWhereWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamUpdateManyWithWhereWithoutCreatedByInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TeamScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamScalarWhereInput"
    TeamRequestUncheckedUpdateManyWithoutRequesterNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestCreateWithoutRequesterInput"
            - $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutRequesterInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateOrConnectWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestCreateOrConnectWithoutRequesterInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestUpsertWithWhereUniqueWithoutRequesterInp\
                ut"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUpsertWithWhereUniqueWithoutRequesterInp\
                  ut"
        createMany:
          $ref: "#/components/schemas/TeamRequestCreateManyRequesterInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestUpdateWithWhereUniqueWithoutRequesterInp\
                ut"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUpdateWithWhereUniqueWithoutRequesterInp\
                  ut"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestUpdateManyWithWhereWithoutRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUpdateManyWithWhereWithoutRequesterInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestScalarWhereInput"
    UserCreateNestedOneWithoutTodosInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTodosInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutTodosInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    BoolFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: boolean
    DateTimeFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
          format: date-time
    UserUpdateOneRequiredWithoutTodosNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTodosInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutTodosInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutTodosInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutTodosInput"
            - $ref: "#/components/schemas/UserUpdateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTodosInput"
    UserCreateNestedOneWithoutSentRequestsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSentRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSentRequestsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutSentRequestsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    UserCreateNestedOneWithoutReceivedRequestsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutReceivedRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutReceivedRequestsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutReceivedRequestsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    EnumRequestStatusFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          $ref: "#/components/schemas/RequestStatus"
    UserUpdateOneRequiredWithoutSentRequestsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSentRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSentRequestsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutSentRequestsInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutSentRequestsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutSentRequestsInput"
            - $ref: "#/components/schemas/UserUpdateWithoutSentRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSentRequestsInput"
    UserUpdateOneRequiredWithoutReceivedRequestsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutReceivedRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutReceivedRequestsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutReceivedRequestsInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutReceivedRequestsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutReceivedRequestsInpu\
                t"
            - $ref: "#/components/schemas/UserUpdateWithoutReceivedRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutReceivedRequestsInput"
    UserCreateNestedOneWithoutCreateTeamTodosInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutCreateTeamTodosInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutCreateTeamTodosInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutCreateTeamTodosInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    TeamCreateNestedOneWithoutTodosInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateWithoutTodosInput"
            - $ref: "#/components/schemas/TeamUncheckedCreateWithoutTodosInput"
        connectOrCreate:
          $ref: "#/components/schemas/TeamCreateOrConnectWithoutTodosInput"
        connect:
          $ref: "#/components/schemas/TeamWhereUniqueInput"
    UserUpdateOneRequiredWithoutCreateTeamTodosNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutCreateTeamTodosInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutCreateTeamTodosInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutCreateTeamTodosInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutCreateTeamTodosInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutCreateTeamTodosInput"
            - $ref: "#/components/schemas/UserUpdateWithoutCreateTeamTodosInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutCreateTeamTodosInput"
    TeamUpdateOneRequiredWithoutTodosNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateWithoutTodosInput"
            - $ref: "#/components/schemas/TeamUncheckedCreateWithoutTodosInput"
        connectOrCreate:
          $ref: "#/components/schemas/TeamCreateOrConnectWithoutTodosInput"
        upsert:
          $ref: "#/components/schemas/TeamUpsertWithoutTodosInput"
        connect:
          $ref: "#/components/schemas/TeamWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamUpdateToOneWithWhereWithoutTodosInput"
            - $ref: "#/components/schemas/TeamUpdateWithoutTodosInput"
            - $ref: "#/components/schemas/TeamUncheckedUpdateWithoutTodosInput"
    UserCreateNestedOneWithoutOwnedTeamsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutOwnedTeamsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutOwnedTeamsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutOwnedTeamsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    TeamMemberCreateNestedManyWithoutTeamInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberCreateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutTeamInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateOrConnectWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberCreateOrConnectWithoutTeamInput"
        createMany:
          $ref: "#/components/schemas/TeamMemberCreateManyTeamInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
    TeamTodosCreateNestedManyWithoutTeamInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosCreateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutTeamInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateOrConnectWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosCreateOrConnectWithoutTeamInput"
        createMany:
          $ref: "#/components/schemas/TeamTodosCreateManyTeamInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
    TeamRequestCreateNestedManyWithoutTeamInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestCreateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutTeamInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateOrConnectWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestCreateOrConnectWithoutTeamInput"
        createMany:
          $ref: "#/components/schemas/TeamRequestCreateManyTeamInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
    TeamMemberUncheckedCreateNestedManyWithoutTeamInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberCreateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutTeamInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateOrConnectWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberCreateOrConnectWithoutTeamInput"
        createMany:
          $ref: "#/components/schemas/TeamMemberCreateManyTeamInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
    TeamTodosUncheckedCreateNestedManyWithoutTeamInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosCreateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutTeamInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateOrConnectWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosCreateOrConnectWithoutTeamInput"
        createMany:
          $ref: "#/components/schemas/TeamTodosCreateManyTeamInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
    TeamRequestUncheckedCreateNestedManyWithoutTeamInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestCreateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutTeamInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateOrConnectWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestCreateOrConnectWithoutTeamInput"
        createMany:
          $ref: "#/components/schemas/TeamRequestCreateManyTeamInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
    UserUpdateOneRequiredWithoutOwnedTeamsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutOwnedTeamsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutOwnedTeamsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutOwnedTeamsInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutOwnedTeamsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutOwnedTeamsInput"
            - $ref: "#/components/schemas/UserUpdateWithoutOwnedTeamsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutOwnedTeamsInput"
    TeamMemberUpdateManyWithoutTeamNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberCreateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutTeamInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateOrConnectWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberCreateOrConnectWithoutTeamInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberUpsertWithWhereUniqueWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUpsertWithWhereUniqueWithoutTeamInput"
        createMany:
          $ref: "#/components/schemas/TeamMemberCreateManyTeamInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberUpdateWithWhereUniqueWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUpdateWithWhereUniqueWithoutTeamInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberUpdateManyWithWhereWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUpdateManyWithWhereWithoutTeamInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberScalarWhereInput"
    TeamTodosUpdateManyWithoutTeamNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosCreateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutTeamInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateOrConnectWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosCreateOrConnectWithoutTeamInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosUpsertWithWhereUniqueWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUpsertWithWhereUniqueWithoutTeamInput"
        createMany:
          $ref: "#/components/schemas/TeamTodosCreateManyTeamInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosUpdateWithWhereUniqueWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUpdateWithWhereUniqueWithoutTeamInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosUpdateManyWithWhereWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUpdateManyWithWhereWithoutTeamInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosScalarWhereInput"
    TeamRequestUpdateManyWithoutTeamNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestCreateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutTeamInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateOrConnectWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestCreateOrConnectWithoutTeamInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestUpsertWithWhereUniqueWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUpsertWithWhereUniqueWithoutTeamInput"
        createMany:
          $ref: "#/components/schemas/TeamRequestCreateManyTeamInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestUpdateWithWhereUniqueWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUpdateWithWhereUniqueWithoutTeamInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestUpdateManyWithWhereWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUpdateManyWithWhereWithoutTeamInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestScalarWhereInput"
    TeamMemberUncheckedUpdateManyWithoutTeamNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberCreateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutTeamInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateOrConnectWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberCreateOrConnectWithoutTeamInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberUpsertWithWhereUniqueWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUpsertWithWhereUniqueWithoutTeamInput"
        createMany:
          $ref: "#/components/schemas/TeamMemberCreateManyTeamInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberUpdateWithWhereUniqueWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUpdateWithWhereUniqueWithoutTeamInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberUpdateManyWithWhereWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberUpdateManyWithWhereWithoutTeamInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberScalarWhereInput"
    TeamTodosUncheckedUpdateManyWithoutTeamNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosCreateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutTeamInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateOrConnectWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosCreateOrConnectWithoutTeamInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosUpsertWithWhereUniqueWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUpsertWithWhereUniqueWithoutTeamInput"
        createMany:
          $ref: "#/components/schemas/TeamTodosCreateManyTeamInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosUpdateWithWhereUniqueWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUpdateWithWhereUniqueWithoutTeamInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosUpdateManyWithWhereWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosUpdateManyWithWhereWithoutTeamInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosScalarWhereInput"
    TeamRequestUncheckedUpdateManyWithoutTeamNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestCreateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutTeamInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateOrConnectWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestCreateOrConnectWithoutTeamInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestUpsertWithWhereUniqueWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUpsertWithWhereUniqueWithoutTeamInput"
        createMany:
          $ref: "#/components/schemas/TeamRequestCreateManyTeamInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestUpdateWithWhereUniqueWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUpdateWithWhereUniqueWithoutTeamInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestUpdateManyWithWhereWithoutTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestUpdateManyWithWhereWithoutTeamInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestScalarWhereInput"
    TeamCreateNestedOneWithoutMembersInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateWithoutMembersInput"
            - $ref: "#/components/schemas/TeamUncheckedCreateWithoutMembersInput"
        connectOrCreate:
          $ref: "#/components/schemas/TeamCreateOrConnectWithoutMembersInput"
        connect:
          $ref: "#/components/schemas/TeamWhereUniqueInput"
    UserCreateNestedOneWithoutTeamMemberInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTeamMemberInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTeamMemberInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutTeamMemberInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    EnumTeamRoleFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          $ref: "#/components/schemas/TeamRole"
    TeamUpdateOneRequiredWithoutMembersNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateWithoutMembersInput"
            - $ref: "#/components/schemas/TeamUncheckedCreateWithoutMembersInput"
        connectOrCreate:
          $ref: "#/components/schemas/TeamCreateOrConnectWithoutMembersInput"
        upsert:
          $ref: "#/components/schemas/TeamUpsertWithoutMembersInput"
        connect:
          $ref: "#/components/schemas/TeamWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamUpdateToOneWithWhereWithoutMembersInput"
            - $ref: "#/components/schemas/TeamUpdateWithoutMembersInput"
            - $ref: "#/components/schemas/TeamUncheckedUpdateWithoutMembersInput"
    UserUpdateOneRequiredWithoutTeamMemberNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTeamMemberInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTeamMemberInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutTeamMemberInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutTeamMemberInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutTeamMemberInput"
            - $ref: "#/components/schemas/UserUpdateWithoutTeamMemberInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTeamMemberInput"
    TeamCreateNestedOneWithoutRequestsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateWithoutRequestsInput"
            - $ref: "#/components/schemas/TeamUncheckedCreateWithoutRequestsInput"
        connectOrCreate:
          $ref: "#/components/schemas/TeamCreateOrConnectWithoutRequestsInput"
        connect:
          $ref: "#/components/schemas/TeamWhereUniqueInput"
    UserCreateNestedOneWithoutTeamRequestsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTeamRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTeamRequestsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutTeamRequestsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    TeamUpdateOneRequiredWithoutRequestsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateWithoutRequestsInput"
            - $ref: "#/components/schemas/TeamUncheckedCreateWithoutRequestsInput"
        connectOrCreate:
          $ref: "#/components/schemas/TeamCreateOrConnectWithoutRequestsInput"
        upsert:
          $ref: "#/components/schemas/TeamUpsertWithoutRequestsInput"
        connect:
          $ref: "#/components/schemas/TeamWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamUpdateToOneWithWhereWithoutRequestsInput"
            - $ref: "#/components/schemas/TeamUpdateWithoutRequestsInput"
            - $ref: "#/components/schemas/TeamUncheckedUpdateWithoutRequestsInput"
    UserUpdateOneRequiredWithoutTeamRequestsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTeamRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTeamRequestsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutTeamRequestsInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutTeamRequestsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutTeamRequestsInput"
            - $ref: "#/components/schemas/UserUpdateWithoutTeamRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTeamRequestsInput"
    NestedStringFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringFilter"
    NestedStringNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableFilter"
            - type: "null"
    NestedStringWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    NestedIntFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntFilter"
    NestedStringNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedStringNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedStringNullableFilter"
    NestedIntNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: integer
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableFilter"
            - type: "null"
    NestedBoolFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolFilter"
    NestedDateTimeFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeFilter"
    NestedBoolWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedBoolFilter"
        _max:
          $ref: "#/components/schemas/NestedBoolFilter"
    NestedDateTimeWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeFilter"
    NestedEnumRequestStatusFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/RequestStatus"
        in:
          type: array
          items:
            $ref: "#/components/schemas/RequestStatus"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/RequestStatus"
        not:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/NestedEnumRequestStatusFilter"
    NestedEnumRequestStatusWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/RequestStatus"
        in:
          type: array
          items:
            $ref: "#/components/schemas/RequestStatus"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/RequestStatus"
        not:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/NestedEnumRequestStatusWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumRequestStatusFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumRequestStatusFilter"
    NestedEnumTeamRoleFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/TeamRole"
        in:
          type: array
          items:
            $ref: "#/components/schemas/TeamRole"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/TeamRole"
        not:
          oneOf:
            - $ref: "#/components/schemas/TeamRole"
            - $ref: "#/components/schemas/NestedEnumTeamRoleFilter"
    NestedEnumTeamRoleWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/TeamRole"
        in:
          type: array
          items:
            $ref: "#/components/schemas/TeamRole"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/TeamRole"
        not:
          oneOf:
            - $ref: "#/components/schemas/TeamRole"
            - $ref: "#/components/schemas/NestedEnumTeamRoleWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumTeamRoleFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumTeamRoleFilter"
    TodosCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
      required:
        - name
    TodosUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
      required:
        - name
    TodosCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodosWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    TodosCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    RequestCreateWithoutRequesterInput:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        status:
          $ref: "#/components/schemas/RequestStatus"
        targetUser:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutReceivedRequestsInput"
      required:
        - status
        - targetUser
    RequestUncheckedCreateWithoutRequesterInput:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        targetUserId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
      required:
        - targetUserId
        - status
    RequestCreateOrConnectWithoutRequesterInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
      required:
        - where
        - create
    RequestCreateManyRequesterInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateManyRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateManyRequesterInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    RequestCreateWithoutTargetUserInput:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        status:
          $ref: "#/components/schemas/RequestStatus"
        requester:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutSentRequestsInput"
      required:
        - status
        - requester
    RequestUncheckedCreateWithoutTargetUserInput:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        requesterId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
      required:
        - requesterId
        - status
    RequestCreateOrConnectWithoutTargetUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
      required:
        - where
        - create
    RequestCreateManyTargetUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateManyTargetUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateManyTargetUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    TeamMemberCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        role:
          $ref: "#/components/schemas/TeamRole"
        team:
          $ref: "#/components/schemas/TeamCreateNestedOneWithoutMembersInput"
      required:
        - team
    TeamMemberUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        teamId:
          type: string
        role:
          $ref: "#/components/schemas/TeamRole"
      required:
        - teamId
    TeamMemberCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateWithoutUserInput"
            - $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    TeamMemberCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    TeamTodosCreateWithoutCreatorInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        team:
          $ref: "#/components/schemas/TeamCreateNestedOneWithoutTodosInput"
      required:
        - name
        - team
    TeamTodosUncheckedCreateWithoutCreatorInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        teamId:
          type: string
      required:
        - name
        - teamId
    TeamTodosCreateOrConnectWithoutCreatorInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateWithoutCreatorInput"
            - $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutCreatorInput"
      required:
        - where
        - create
    TeamTodosCreateManyCreatorInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateManyCreatorInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosCreateManyCreatorInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    TeamCreateWithoutCreatedByInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        members:
          $ref: "#/components/schemas/TeamMemberCreateNestedManyWithoutTeamInput"
        todos:
          $ref: "#/components/schemas/TeamTodosCreateNestedManyWithoutTeamInput"
        requests:
          $ref: "#/components/schemas/TeamRequestCreateNestedManyWithoutTeamInput"
      required:
        - name
    TeamUncheckedCreateWithoutCreatedByInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        members:
          $ref: "#/components/schemas/TeamMemberUncheckedCreateNestedManyWithoutTeamInput"
        todos:
          $ref: "#/components/schemas/TeamTodosUncheckedCreateNestedManyWithoutTeamInput"
        requests:
          $ref: "#/components/schemas/TeamRequestUncheckedCreateNestedManyWithoutTeamInpu\
            t"
      required:
        - name
    TeamCreateOrConnectWithoutCreatedByInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateWithoutCreatedByInput"
            - $ref: "#/components/schemas/TeamUncheckedCreateWithoutCreatedByInput"
      required:
        - where
        - create
    TeamCreateManyCreatedByInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateManyCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamCreateManyCreatedByInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    TeamRequestCreateWithoutRequesterInput:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        status:
          $ref: "#/components/schemas/RequestStatus"
        team:
          $ref: "#/components/schemas/TeamCreateNestedOneWithoutRequestsInput"
      required:
        - team
    TeamRequestUncheckedCreateWithoutRequesterInput:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        teamId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
      required:
        - teamId
    TeamRequestCreateOrConnectWithoutRequesterInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateWithoutRequesterInput"
            - $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutRequesterInput"
      required:
        - where
        - create
    TeamRequestCreateManyRequesterInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateManyRequesterInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestCreateManyRequesterInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    TodosUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodosWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TodosUpdateWithoutUserInput"
            - $ref: "#/components/schemas/TodosUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateWithoutUserInput"
            - $ref: "#/components/schemas/TodosUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    TodosUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodosWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TodosUpdateWithoutUserInput"
            - $ref: "#/components/schemas/TodosUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    TodosUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodosScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TodosUpdateManyMutationInput"
            - $ref: "#/components/schemas/TodosUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    TodosScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TodosScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TodosScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TodosScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        completed:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
    RequestUpsertWithWhereUniqueWithoutRequesterInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateWithoutRequesterInput"
            - $ref: "#/components/schemas/RequestUncheckedUpdateWithoutRequesterInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutRequesterInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutRequesterInput"
      required:
        - where
        - update
        - create
    RequestUpdateWithWhereUniqueWithoutRequesterInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateWithoutRequesterInput"
            - $ref: "#/components/schemas/RequestUncheckedUpdateWithoutRequesterInput"
      required:
        - where
        - data
    RequestUpdateManyWithWhereWithoutRequesterInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateManyMutationInput"
            - $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutRequesterInput"
      required:
        - where
        - data
    RequestScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/RequestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/RequestScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/RequestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        message:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        requesterId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        targetUserId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumRequestStatusFilter"
            - $ref: "#/components/schemas/RequestStatus"
    RequestUpsertWithWhereUniqueWithoutTargetUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateWithoutTargetUserInput"
            - $ref: "#/components/schemas/RequestUncheckedUpdateWithoutTargetUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateWithoutTargetUserInput"
            - $ref: "#/components/schemas/RequestUncheckedCreateWithoutTargetUserInput"
      required:
        - where
        - update
        - create
    RequestUpdateWithWhereUniqueWithoutTargetUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateWithoutTargetUserInput"
            - $ref: "#/components/schemas/RequestUncheckedUpdateWithoutTargetUserInput"
      required:
        - where
        - data
    RequestUpdateManyWithWhereWithoutTargetUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/RequestUpdateManyMutationInput"
            - $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutTargetUserInput"
      required:
        - where
        - data
    TeamMemberUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberUpdateWithoutUserInput"
            - $ref: "#/components/schemas/TeamMemberUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateWithoutUserInput"
            - $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    TeamMemberUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberUpdateWithoutUserInput"
            - $ref: "#/components/schemas/TeamMemberUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    TeamMemberUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamMemberScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberUpdateManyMutationInput"
            - $ref: "#/components/schemas/TeamMemberUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    TeamMemberScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TeamMemberScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        teamId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        role:
          oneOf:
            - $ref: "#/components/schemas/EnumTeamRoleFilter"
            - $ref: "#/components/schemas/TeamRole"
    TeamTodosUpsertWithWhereUniqueWithoutCreatorInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosUpdateWithoutCreatorInput"
            - $ref: "#/components/schemas/TeamTodosUncheckedUpdateWithoutCreatorInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateWithoutCreatorInput"
            - $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutCreatorInput"
      required:
        - where
        - update
        - create
    TeamTodosUpdateWithWhereUniqueWithoutCreatorInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosUpdateWithoutCreatorInput"
            - $ref: "#/components/schemas/TeamTodosUncheckedUpdateWithoutCreatorInput"
      required:
        - where
        - data
    TeamTodosUpdateManyWithWhereWithoutCreatorInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamTodosScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosUpdateManyMutationInput"
            - $ref: "#/components/schemas/TeamTodosUncheckedUpdateManyWithoutCreatorInput"
      required:
        - where
        - data
    TeamTodosScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TeamTodosScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        completed:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        creatorId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        teamId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
    TeamUpsertWithWhereUniqueWithoutCreatedByInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamUpdateWithoutCreatedByInput"
            - $ref: "#/components/schemas/TeamUncheckedUpdateWithoutCreatedByInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateWithoutCreatedByInput"
            - $ref: "#/components/schemas/TeamUncheckedCreateWithoutCreatedByInput"
      required:
        - where
        - update
        - create
    TeamUpdateWithWhereUniqueWithoutCreatedByInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamUpdateWithoutCreatedByInput"
            - $ref: "#/components/schemas/TeamUncheckedUpdateWithoutCreatedByInput"
      required:
        - where
        - data
    TeamUpdateManyWithWhereWithoutCreatedByInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamUpdateManyMutationInput"
            - $ref: "#/components/schemas/TeamUncheckedUpdateManyWithoutCreatedByInput"
      required:
        - where
        - data
    TeamScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TeamScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TeamScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TeamScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
    TeamRequestUpsertWithWhereUniqueWithoutRequesterInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestUpdateWithoutRequesterInput"
            - $ref: "#/components/schemas/TeamRequestUncheckedUpdateWithoutRequesterInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateWithoutRequesterInput"
            - $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutRequesterInput"
      required:
        - where
        - update
        - create
    TeamRequestUpdateWithWhereUniqueWithoutRequesterInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestUpdateWithoutRequesterInput"
            - $ref: "#/components/schemas/TeamRequestUncheckedUpdateWithoutRequesterInput"
      required:
        - where
        - data
    TeamRequestUpdateManyWithWhereWithoutRequesterInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamRequestScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestUpdateManyMutationInput"
            - $ref: "#/components/schemas/TeamRequestUncheckedUpdateManyWithoutRequesterInput"
      required:
        - where
        - data
    TeamRequestScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TeamRequestScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        message:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        teamId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        requesterId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumRequestStatusFilter"
            - $ref: "#/components/schemas/RequestStatus"
    UserCreateWithoutTodosInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        sentRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutRequesterInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutTargetUserInput"
        teamMember:
          $ref: "#/components/schemas/TeamMemberCreateNestedManyWithoutUserInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosCreateNestedManyWithoutCreatorInput"
        ownedTeams:
          $ref: "#/components/schemas/TeamCreateNestedManyWithoutCreatedByInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestCreateNestedManyWithoutRequesterInput"
      required:
        - id
    UserUncheckedCreateWithoutTodosInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        sentRequests:
          $ref: "#/components/schemas/RequestUncheckedCreateNestedManyWithoutRequesterInp\
            ut"
        receivedRequests:
          $ref: "#/components/schemas/RequestUncheckedCreateNestedManyWithoutTargetUserIn\
            put"
        teamMember:
          $ref: "#/components/schemas/TeamMemberUncheckedCreateNestedManyWithoutUserInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosUncheckedCreateNestedManyWithoutCreatorInp\
            ut"
        ownedTeams:
          $ref: "#/components/schemas/TeamUncheckedCreateNestedManyWithoutCreatedByInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestUncheckedCreateNestedManyWithoutRequeste\
            rInput"
      required:
        - id
    UserCreateOrConnectWithoutTodosInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTodosInput"
      required:
        - where
        - create
    UserUpsertWithoutTodosInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTodosInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTodosInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutTodosInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTodosInput"
      required:
        - data
    UserUpdateWithoutTodosInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutRequesterNestedInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutTargetUserNestedInput"
        teamMember:
          $ref: "#/components/schemas/TeamMemberUpdateManyWithoutUserNestedInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosUpdateManyWithoutCreatorNestedInput"
        ownedTeams:
          $ref: "#/components/schemas/TeamUpdateManyWithoutCreatedByNestedInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestUpdateManyWithoutRequesterNestedInput"
    UserUncheckedUpdateWithoutTodosInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        sentRequests:
          $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutRequesterNestedInp\
            ut"
        receivedRequests:
          $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutTargetUserNestedIn\
            put"
        teamMember:
          $ref: "#/components/schemas/TeamMemberUncheckedUpdateManyWithoutUserNestedInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosUncheckedUpdateManyWithoutCreatorNestedInp\
            ut"
        ownedTeams:
          $ref: "#/components/schemas/TeamUncheckedUpdateManyWithoutCreatedByNestedInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestUncheckedUpdateManyWithoutRequesterNeste\
            dInput"
    UserCreateWithoutSentRequestsInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          $ref: "#/components/schemas/TodosCreateNestedManyWithoutUserInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutTargetUserInput"
        teamMember:
          $ref: "#/components/schemas/TeamMemberCreateNestedManyWithoutUserInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosCreateNestedManyWithoutCreatorInput"
        ownedTeams:
          $ref: "#/components/schemas/TeamCreateNestedManyWithoutCreatedByInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestCreateNestedManyWithoutRequesterInput"
      required:
        - id
    UserUncheckedCreateWithoutSentRequestsInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          $ref: "#/components/schemas/TodosUncheckedCreateNestedManyWithoutUserInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestUncheckedCreateNestedManyWithoutTargetUserIn\
            put"
        teamMember:
          $ref: "#/components/schemas/TeamMemberUncheckedCreateNestedManyWithoutUserInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosUncheckedCreateNestedManyWithoutCreatorInp\
            ut"
        ownedTeams:
          $ref: "#/components/schemas/TeamUncheckedCreateNestedManyWithoutCreatedByInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestUncheckedCreateNestedManyWithoutRequeste\
            rInput"
      required:
        - id
    UserCreateOrConnectWithoutSentRequestsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSentRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSentRequestsInput"
      required:
        - where
        - create
    UserCreateWithoutReceivedRequestsInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          $ref: "#/components/schemas/TodosCreateNestedManyWithoutUserInput"
        sentRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutRequesterInput"
        teamMember:
          $ref: "#/components/schemas/TeamMemberCreateNestedManyWithoutUserInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosCreateNestedManyWithoutCreatorInput"
        ownedTeams:
          $ref: "#/components/schemas/TeamCreateNestedManyWithoutCreatedByInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestCreateNestedManyWithoutRequesterInput"
      required:
        - id
    UserUncheckedCreateWithoutReceivedRequestsInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          $ref: "#/components/schemas/TodosUncheckedCreateNestedManyWithoutUserInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUncheckedCreateNestedManyWithoutRequesterInp\
            ut"
        teamMember:
          $ref: "#/components/schemas/TeamMemberUncheckedCreateNestedManyWithoutUserInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosUncheckedCreateNestedManyWithoutCreatorInp\
            ut"
        ownedTeams:
          $ref: "#/components/schemas/TeamUncheckedCreateNestedManyWithoutCreatedByInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestUncheckedCreateNestedManyWithoutRequeste\
            rInput"
      required:
        - id
    UserCreateOrConnectWithoutReceivedRequestsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutReceivedRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutReceivedRequestsInput"
      required:
        - where
        - create
    UserUpsertWithoutSentRequestsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutSentRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSentRequestsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSentRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSentRequestsInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutSentRequestsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutSentRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSentRequestsInput"
      required:
        - data
    UserUpdateWithoutSentRequestsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosUpdateManyWithoutUserNestedInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutTargetUserNestedInput"
        teamMember:
          $ref: "#/components/schemas/TeamMemberUpdateManyWithoutUserNestedInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosUpdateManyWithoutCreatorNestedInput"
        ownedTeams:
          $ref: "#/components/schemas/TeamUpdateManyWithoutCreatedByNestedInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestUpdateManyWithoutRequesterNestedInput"
    UserUncheckedUpdateWithoutSentRequestsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosUncheckedUpdateManyWithoutUserNestedInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutTargetUserNestedIn\
            put"
        teamMember:
          $ref: "#/components/schemas/TeamMemberUncheckedUpdateManyWithoutUserNestedInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosUncheckedUpdateManyWithoutCreatorNestedInp\
            ut"
        ownedTeams:
          $ref: "#/components/schemas/TeamUncheckedUpdateManyWithoutCreatedByNestedInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestUncheckedUpdateManyWithoutRequesterNeste\
            dInput"
    UserUpsertWithoutReceivedRequestsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutReceivedRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutReceivedRequestsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutReceivedRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutReceivedRequestsInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutReceivedRequestsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutReceivedRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutReceivedRequestsInput"
      required:
        - data
    UserUpdateWithoutReceivedRequestsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosUpdateManyWithoutUserNestedInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutRequesterNestedInput"
        teamMember:
          $ref: "#/components/schemas/TeamMemberUpdateManyWithoutUserNestedInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosUpdateManyWithoutCreatorNestedInput"
        ownedTeams:
          $ref: "#/components/schemas/TeamUpdateManyWithoutCreatedByNestedInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestUpdateManyWithoutRequesterNestedInput"
    UserUncheckedUpdateWithoutReceivedRequestsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosUncheckedUpdateManyWithoutUserNestedInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutRequesterNestedInp\
            ut"
        teamMember:
          $ref: "#/components/schemas/TeamMemberUncheckedUpdateManyWithoutUserNestedInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosUncheckedUpdateManyWithoutCreatorNestedInp\
            ut"
        ownedTeams:
          $ref: "#/components/schemas/TeamUncheckedUpdateManyWithoutCreatedByNestedInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestUncheckedUpdateManyWithoutRequesterNeste\
            dInput"
    UserCreateWithoutCreateTeamTodosInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          $ref: "#/components/schemas/TodosCreateNestedManyWithoutUserInput"
        sentRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutRequesterInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutTargetUserInput"
        teamMember:
          $ref: "#/components/schemas/TeamMemberCreateNestedManyWithoutUserInput"
        ownedTeams:
          $ref: "#/components/schemas/TeamCreateNestedManyWithoutCreatedByInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestCreateNestedManyWithoutRequesterInput"
      required:
        - id
    UserUncheckedCreateWithoutCreateTeamTodosInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          $ref: "#/components/schemas/TodosUncheckedCreateNestedManyWithoutUserInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUncheckedCreateNestedManyWithoutRequesterInp\
            ut"
        receivedRequests:
          $ref: "#/components/schemas/RequestUncheckedCreateNestedManyWithoutTargetUserIn\
            put"
        teamMember:
          $ref: "#/components/schemas/TeamMemberUncheckedCreateNestedManyWithoutUserInput"
        ownedTeams:
          $ref: "#/components/schemas/TeamUncheckedCreateNestedManyWithoutCreatedByInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestUncheckedCreateNestedManyWithoutRequeste\
            rInput"
      required:
        - id
    UserCreateOrConnectWithoutCreateTeamTodosInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutCreateTeamTodosInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutCreateTeamTodosInput"
      required:
        - where
        - create
    TeamCreateWithoutTodosInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        createdBy:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutOwnedTeamsInput"
        members:
          $ref: "#/components/schemas/TeamMemberCreateNestedManyWithoutTeamInput"
        requests:
          $ref: "#/components/schemas/TeamRequestCreateNestedManyWithoutTeamInput"
      required:
        - name
        - createdBy
    TeamUncheckedCreateWithoutTodosInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        createdById:
          type: string
        members:
          $ref: "#/components/schemas/TeamMemberUncheckedCreateNestedManyWithoutTeamInput"
        requests:
          $ref: "#/components/schemas/TeamRequestUncheckedCreateNestedManyWithoutTeamInpu\
            t"
      required:
        - name
        - createdById
    TeamCreateOrConnectWithoutTodosInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateWithoutTodosInput"
            - $ref: "#/components/schemas/TeamUncheckedCreateWithoutTodosInput"
      required:
        - where
        - create
    UserUpsertWithoutCreateTeamTodosInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutCreateTeamTodosInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutCreateTeamTodosInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutCreateTeamTodosInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutCreateTeamTodosInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutCreateTeamTodosInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutCreateTeamTodosInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutCreateTeamTodosInput"
      required:
        - data
    UserUpdateWithoutCreateTeamTodosInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosUpdateManyWithoutUserNestedInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutRequesterNestedInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutTargetUserNestedInput"
        teamMember:
          $ref: "#/components/schemas/TeamMemberUpdateManyWithoutUserNestedInput"
        ownedTeams:
          $ref: "#/components/schemas/TeamUpdateManyWithoutCreatedByNestedInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestUpdateManyWithoutRequesterNestedInput"
    UserUncheckedUpdateWithoutCreateTeamTodosInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosUncheckedUpdateManyWithoutUserNestedInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutRequesterNestedInp\
            ut"
        receivedRequests:
          $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutTargetUserNestedIn\
            put"
        teamMember:
          $ref: "#/components/schemas/TeamMemberUncheckedUpdateManyWithoutUserNestedInput"
        ownedTeams:
          $ref: "#/components/schemas/TeamUncheckedUpdateManyWithoutCreatedByNestedInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestUncheckedUpdateManyWithoutRequesterNeste\
            dInput"
    TeamUpsertWithoutTodosInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamUpdateWithoutTodosInput"
            - $ref: "#/components/schemas/TeamUncheckedUpdateWithoutTodosInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateWithoutTodosInput"
            - $ref: "#/components/schemas/TeamUncheckedCreateWithoutTodosInput"
        where:
          $ref: "#/components/schemas/TeamWhereInput"
      required:
        - update
        - create
    TeamUpdateToOneWithWhereWithoutTodosInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamUpdateWithoutTodosInput"
            - $ref: "#/components/schemas/TeamUncheckedUpdateWithoutTodosInput"
      required:
        - data
    TeamUpdateWithoutTodosInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdBy:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutOwnedTeamsNestedInput"
        members:
          $ref: "#/components/schemas/TeamMemberUpdateManyWithoutTeamNestedInput"
        requests:
          $ref: "#/components/schemas/TeamRequestUpdateManyWithoutTeamNestedInput"
    TeamUncheckedUpdateWithoutTodosInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        members:
          $ref: "#/components/schemas/TeamMemberUncheckedUpdateManyWithoutTeamNestedInput"
        requests:
          $ref: "#/components/schemas/TeamRequestUncheckedUpdateManyWithoutTeamNestedInpu\
            t"
    UserCreateWithoutOwnedTeamsInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          $ref: "#/components/schemas/TodosCreateNestedManyWithoutUserInput"
        sentRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutRequesterInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutTargetUserInput"
        teamMember:
          $ref: "#/components/schemas/TeamMemberCreateNestedManyWithoutUserInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosCreateNestedManyWithoutCreatorInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestCreateNestedManyWithoutRequesterInput"
      required:
        - id
    UserUncheckedCreateWithoutOwnedTeamsInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          $ref: "#/components/schemas/TodosUncheckedCreateNestedManyWithoutUserInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUncheckedCreateNestedManyWithoutRequesterInp\
            ut"
        receivedRequests:
          $ref: "#/components/schemas/RequestUncheckedCreateNestedManyWithoutTargetUserIn\
            put"
        teamMember:
          $ref: "#/components/schemas/TeamMemberUncheckedCreateNestedManyWithoutUserInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosUncheckedCreateNestedManyWithoutCreatorInp\
            ut"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestUncheckedCreateNestedManyWithoutRequeste\
            rInput"
      required:
        - id
    UserCreateOrConnectWithoutOwnedTeamsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutOwnedTeamsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutOwnedTeamsInput"
      required:
        - where
        - create
    TeamMemberCreateWithoutTeamInput:
      type: object
      properties:
        id:
          type: string
        role:
          $ref: "#/components/schemas/TeamRole"
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutTeamMemberInput"
      required:
        - user
    TeamMemberUncheckedCreateWithoutTeamInput:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        role:
          $ref: "#/components/schemas/TeamRole"
      required:
        - userId
    TeamMemberCreateOrConnectWithoutTeamInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutTeamInput"
      required:
        - where
        - create
    TeamMemberCreateManyTeamInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateManyTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberCreateManyTeamInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    TeamTodosCreateWithoutTeamInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        creator:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutCreateTeamTodosInput"
      required:
        - name
        - creator
    TeamTodosUncheckedCreateWithoutTeamInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        creatorId:
          type: string
      required:
        - name
        - creatorId
    TeamTodosCreateOrConnectWithoutTeamInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutTeamInput"
      required:
        - where
        - create
    TeamTodosCreateManyTeamInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateManyTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosCreateManyTeamInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    TeamRequestCreateWithoutTeamInput:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        status:
          $ref: "#/components/schemas/RequestStatus"
        requester:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutTeamRequestsInput"
      required:
        - requester
    TeamRequestUncheckedCreateWithoutTeamInput:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        requesterId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
      required:
        - requesterId
    TeamRequestCreateOrConnectWithoutTeamInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutTeamInput"
      required:
        - where
        - create
    TeamRequestCreateManyTeamInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateManyTeamInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestCreateManyTeamInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    UserUpsertWithoutOwnedTeamsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutOwnedTeamsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutOwnedTeamsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutOwnedTeamsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutOwnedTeamsInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutOwnedTeamsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutOwnedTeamsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutOwnedTeamsInput"
      required:
        - data
    UserUpdateWithoutOwnedTeamsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosUpdateManyWithoutUserNestedInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutRequesterNestedInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutTargetUserNestedInput"
        teamMember:
          $ref: "#/components/schemas/TeamMemberUpdateManyWithoutUserNestedInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosUpdateManyWithoutCreatorNestedInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestUpdateManyWithoutRequesterNestedInput"
    UserUncheckedUpdateWithoutOwnedTeamsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosUncheckedUpdateManyWithoutUserNestedInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutRequesterNestedInp\
            ut"
        receivedRequests:
          $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutTargetUserNestedIn\
            put"
        teamMember:
          $ref: "#/components/schemas/TeamMemberUncheckedUpdateManyWithoutUserNestedInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosUncheckedUpdateManyWithoutCreatorNestedInp\
            ut"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestUncheckedUpdateManyWithoutRequesterNeste\
            dInput"
    TeamMemberUpsertWithWhereUniqueWithoutTeamInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberUpdateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamMemberUncheckedUpdateWithoutTeamInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamMemberUncheckedCreateWithoutTeamInput"
      required:
        - where
        - update
        - create
    TeamMemberUpdateWithWhereUniqueWithoutTeamInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberUpdateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamMemberUncheckedUpdateWithoutTeamInput"
      required:
        - where
        - data
    TeamMemberUpdateManyWithWhereWithoutTeamInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamMemberScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberUpdateManyMutationInput"
            - $ref: "#/components/schemas/TeamMemberUncheckedUpdateManyWithoutTeamInput"
      required:
        - where
        - data
    TeamTodosUpsertWithWhereUniqueWithoutTeamInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosUpdateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamTodosUncheckedUpdateWithoutTeamInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamTodosUncheckedCreateWithoutTeamInput"
      required:
        - where
        - update
        - create
    TeamTodosUpdateWithWhereUniqueWithoutTeamInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosUpdateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamTodosUncheckedUpdateWithoutTeamInput"
      required:
        - where
        - data
    TeamTodosUpdateManyWithWhereWithoutTeamInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamTodosScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosUpdateManyMutationInput"
            - $ref: "#/components/schemas/TeamTodosUncheckedUpdateManyWithoutTeamInput"
      required:
        - where
        - data
    TeamRequestUpsertWithWhereUniqueWithoutTeamInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestUpdateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamRequestUncheckedUpdateWithoutTeamInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamRequestUncheckedCreateWithoutTeamInput"
      required:
        - where
        - update
        - create
    TeamRequestUpdateWithWhereUniqueWithoutTeamInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestUpdateWithoutTeamInput"
            - $ref: "#/components/schemas/TeamRequestUncheckedUpdateWithoutTeamInput"
      required:
        - where
        - data
    TeamRequestUpdateManyWithWhereWithoutTeamInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamRequestScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestUpdateManyMutationInput"
            - $ref: "#/components/schemas/TeamRequestUncheckedUpdateManyWithoutTeamInput"
      required:
        - where
        - data
    TeamCreateWithoutMembersInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        createdBy:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutOwnedTeamsInput"
        todos:
          $ref: "#/components/schemas/TeamTodosCreateNestedManyWithoutTeamInput"
        requests:
          $ref: "#/components/schemas/TeamRequestCreateNestedManyWithoutTeamInput"
      required:
        - name
        - createdBy
    TeamUncheckedCreateWithoutMembersInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        createdById:
          type: string
        todos:
          $ref: "#/components/schemas/TeamTodosUncheckedCreateNestedManyWithoutTeamInput"
        requests:
          $ref: "#/components/schemas/TeamRequestUncheckedCreateNestedManyWithoutTeamInpu\
            t"
      required:
        - name
        - createdById
    TeamCreateOrConnectWithoutMembersInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateWithoutMembersInput"
            - $ref: "#/components/schemas/TeamUncheckedCreateWithoutMembersInput"
      required:
        - where
        - create
    UserCreateWithoutTeamMemberInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          $ref: "#/components/schemas/TodosCreateNestedManyWithoutUserInput"
        sentRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutRequesterInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutTargetUserInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosCreateNestedManyWithoutCreatorInput"
        ownedTeams:
          $ref: "#/components/schemas/TeamCreateNestedManyWithoutCreatedByInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestCreateNestedManyWithoutRequesterInput"
      required:
        - id
    UserUncheckedCreateWithoutTeamMemberInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          $ref: "#/components/schemas/TodosUncheckedCreateNestedManyWithoutUserInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUncheckedCreateNestedManyWithoutRequesterInp\
            ut"
        receivedRequests:
          $ref: "#/components/schemas/RequestUncheckedCreateNestedManyWithoutTargetUserIn\
            put"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosUncheckedCreateNestedManyWithoutCreatorInp\
            ut"
        ownedTeams:
          $ref: "#/components/schemas/TeamUncheckedCreateNestedManyWithoutCreatedByInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestUncheckedCreateNestedManyWithoutRequeste\
            rInput"
      required:
        - id
    UserCreateOrConnectWithoutTeamMemberInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTeamMemberInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTeamMemberInput"
      required:
        - where
        - create
    TeamUpsertWithoutMembersInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamUpdateWithoutMembersInput"
            - $ref: "#/components/schemas/TeamUncheckedUpdateWithoutMembersInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateWithoutMembersInput"
            - $ref: "#/components/schemas/TeamUncheckedCreateWithoutMembersInput"
        where:
          $ref: "#/components/schemas/TeamWhereInput"
      required:
        - update
        - create
    TeamUpdateToOneWithWhereWithoutMembersInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamUpdateWithoutMembersInput"
            - $ref: "#/components/schemas/TeamUncheckedUpdateWithoutMembersInput"
      required:
        - data
    TeamUpdateWithoutMembersInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdBy:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutOwnedTeamsNestedInput"
        todos:
          $ref: "#/components/schemas/TeamTodosUpdateManyWithoutTeamNestedInput"
        requests:
          $ref: "#/components/schemas/TeamRequestUpdateManyWithoutTeamNestedInput"
    TeamUncheckedUpdateWithoutMembersInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        todos:
          $ref: "#/components/schemas/TeamTodosUncheckedUpdateManyWithoutTeamNestedInput"
        requests:
          $ref: "#/components/schemas/TeamRequestUncheckedUpdateManyWithoutTeamNestedInpu\
            t"
    UserUpsertWithoutTeamMemberInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutTeamMemberInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTeamMemberInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTeamMemberInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTeamMemberInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutTeamMemberInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutTeamMemberInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTeamMemberInput"
      required:
        - data
    UserUpdateWithoutTeamMemberInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosUpdateManyWithoutUserNestedInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutRequesterNestedInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutTargetUserNestedInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosUpdateManyWithoutCreatorNestedInput"
        ownedTeams:
          $ref: "#/components/schemas/TeamUpdateManyWithoutCreatedByNestedInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestUpdateManyWithoutRequesterNestedInput"
    UserUncheckedUpdateWithoutTeamMemberInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosUncheckedUpdateManyWithoutUserNestedInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutRequesterNestedInp\
            ut"
        receivedRequests:
          $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutTargetUserNestedIn\
            put"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosUncheckedUpdateManyWithoutCreatorNestedInp\
            ut"
        ownedTeams:
          $ref: "#/components/schemas/TeamUncheckedUpdateManyWithoutCreatedByNestedInput"
        teamRequests:
          $ref: "#/components/schemas/TeamRequestUncheckedUpdateManyWithoutRequesterNeste\
            dInput"
    TeamCreateWithoutRequestsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        createdBy:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutOwnedTeamsInput"
        members:
          $ref: "#/components/schemas/TeamMemberCreateNestedManyWithoutTeamInput"
        todos:
          $ref: "#/components/schemas/TeamTodosCreateNestedManyWithoutTeamInput"
      required:
        - name
        - createdBy
    TeamUncheckedCreateWithoutRequestsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        createdById:
          type: string
        members:
          $ref: "#/components/schemas/TeamMemberUncheckedCreateNestedManyWithoutTeamInput"
        todos:
          $ref: "#/components/schemas/TeamTodosUncheckedCreateNestedManyWithoutTeamInput"
      required:
        - name
        - createdById
    TeamCreateOrConnectWithoutRequestsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateWithoutRequestsInput"
            - $ref: "#/components/schemas/TeamUncheckedCreateWithoutRequestsInput"
      required:
        - where
        - create
    UserCreateWithoutTeamRequestsInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          $ref: "#/components/schemas/TodosCreateNestedManyWithoutUserInput"
        sentRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutRequesterInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestCreateNestedManyWithoutTargetUserInput"
        teamMember:
          $ref: "#/components/schemas/TeamMemberCreateNestedManyWithoutUserInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosCreateNestedManyWithoutCreatorInput"
        ownedTeams:
          $ref: "#/components/schemas/TeamCreateNestedManyWithoutCreatedByInput"
      required:
        - id
    UserUncheckedCreateWithoutTeamRequestsInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        todos:
          $ref: "#/components/schemas/TodosUncheckedCreateNestedManyWithoutUserInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUncheckedCreateNestedManyWithoutRequesterInp\
            ut"
        receivedRequests:
          $ref: "#/components/schemas/RequestUncheckedCreateNestedManyWithoutTargetUserIn\
            put"
        teamMember:
          $ref: "#/components/schemas/TeamMemberUncheckedCreateNestedManyWithoutUserInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosUncheckedCreateNestedManyWithoutCreatorInp\
            ut"
        ownedTeams:
          $ref: "#/components/schemas/TeamUncheckedCreateNestedManyWithoutCreatedByInput"
      required:
        - id
    UserCreateOrConnectWithoutTeamRequestsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTeamRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTeamRequestsInput"
      required:
        - where
        - create
    TeamUpsertWithoutRequestsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/TeamUpdateWithoutRequestsInput"
            - $ref: "#/components/schemas/TeamUncheckedUpdateWithoutRequestsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateWithoutRequestsInput"
            - $ref: "#/components/schemas/TeamUncheckedCreateWithoutRequestsInput"
        where:
          $ref: "#/components/schemas/TeamWhereInput"
      required:
        - update
        - create
    TeamUpdateToOneWithWhereWithoutRequestsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamUpdateWithoutRequestsInput"
            - $ref: "#/components/schemas/TeamUncheckedUpdateWithoutRequestsInput"
      required:
        - data
    TeamUpdateWithoutRequestsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdBy:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutOwnedTeamsNestedInput"
        members:
          $ref: "#/components/schemas/TeamMemberUpdateManyWithoutTeamNestedInput"
        todos:
          $ref: "#/components/schemas/TeamTodosUpdateManyWithoutTeamNestedInput"
    TeamUncheckedUpdateWithoutRequestsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        members:
          $ref: "#/components/schemas/TeamMemberUncheckedUpdateManyWithoutTeamNestedInput"
        todos:
          $ref: "#/components/schemas/TeamTodosUncheckedUpdateManyWithoutTeamNestedInput"
    UserUpsertWithoutTeamRequestsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutTeamRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTeamRequestsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTeamRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTeamRequestsInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutTeamRequestsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutTeamRequestsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTeamRequestsInput"
      required:
        - data
    UserUpdateWithoutTeamRequestsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosUpdateManyWithoutUserNestedInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutRequesterNestedInput"
        receivedRequests:
          $ref: "#/components/schemas/RequestUpdateManyWithoutTargetUserNestedInput"
        teamMember:
          $ref: "#/components/schemas/TeamMemberUpdateManyWithoutUserNestedInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosUpdateManyWithoutCreatorNestedInput"
        ownedTeams:
          $ref: "#/components/schemas/TeamUpdateManyWithoutCreatedByNestedInput"
    UserUncheckedUpdateWithoutTeamRequestsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        todos:
          $ref: "#/components/schemas/TodosUncheckedUpdateManyWithoutUserNestedInput"
        sentRequests:
          $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutRequesterNestedInp\
            ut"
        receivedRequests:
          $ref: "#/components/schemas/RequestUncheckedUpdateManyWithoutTargetUserNestedIn\
            put"
        teamMember:
          $ref: "#/components/schemas/TeamMemberUncheckedUpdateManyWithoutUserNestedInput"
        createTeamTodos:
          $ref: "#/components/schemas/TeamTodosUncheckedUpdateManyWithoutCreatorNestedInp\
            ut"
        ownedTeams:
          $ref: "#/components/schemas/TeamUncheckedUpdateManyWithoutCreatedByNestedInput"
    TodosCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
      required:
        - name
    RequestCreateManyRequesterInput:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        targetUserId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
      required:
        - targetUserId
        - status
    RequestCreateManyTargetUserInput:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        requesterId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
      required:
        - requesterId
        - status
    TeamMemberCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        teamId:
          type: string
        role:
          $ref: "#/components/schemas/TeamRole"
      required:
        - teamId
    TeamTodosCreateManyCreatorInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        teamId:
          type: string
      required:
        - name
        - teamId
    TeamCreateManyCreatedByInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - name
    TeamRequestCreateManyRequesterInput:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        teamId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
      required:
        - teamId
    TodosUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completed:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TodosUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completed:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TodosUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completed:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    RequestUpdateWithoutRequesterInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
        targetUser:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutReceivedRequestsNestedI\
            nput"
    RequestUncheckedUpdateWithoutRequesterInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        targetUserId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
    RequestUncheckedUpdateManyWithoutRequesterInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        targetUserId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
    RequestUpdateWithoutTargetUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
        requester:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutSentRequestsNestedInput"
    RequestUncheckedUpdateWithoutTargetUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        requesterId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
    RequestUncheckedUpdateManyWithoutTargetUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        requesterId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
    TeamMemberUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/TeamRole"
            - $ref: "#/components/schemas/EnumTeamRoleFieldUpdateOperationsInput"
        team:
          $ref: "#/components/schemas/TeamUpdateOneRequiredWithoutMembersNestedInput"
    TeamMemberUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        teamId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/TeamRole"
            - $ref: "#/components/schemas/EnumTeamRoleFieldUpdateOperationsInput"
    TeamMemberUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        teamId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/TeamRole"
            - $ref: "#/components/schemas/EnumTeamRoleFieldUpdateOperationsInput"
    TeamTodosUpdateWithoutCreatorInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completed:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        team:
          $ref: "#/components/schemas/TeamUpdateOneRequiredWithoutTodosNestedInput"
    TeamTodosUncheckedUpdateWithoutCreatorInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completed:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        teamId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    TeamTodosUncheckedUpdateManyWithoutCreatorInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completed:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        teamId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    TeamUpdateWithoutCreatedByInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        members:
          $ref: "#/components/schemas/TeamMemberUpdateManyWithoutTeamNestedInput"
        todos:
          $ref: "#/components/schemas/TeamTodosUpdateManyWithoutTeamNestedInput"
        requests:
          $ref: "#/components/schemas/TeamRequestUpdateManyWithoutTeamNestedInput"
    TeamUncheckedUpdateWithoutCreatedByInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        members:
          $ref: "#/components/schemas/TeamMemberUncheckedUpdateManyWithoutTeamNestedInput"
        todos:
          $ref: "#/components/schemas/TeamTodosUncheckedUpdateManyWithoutTeamNestedInput"
        requests:
          $ref: "#/components/schemas/TeamRequestUncheckedUpdateManyWithoutTeamNestedInpu\
            t"
    TeamUncheckedUpdateManyWithoutCreatedByInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TeamRequestUpdateWithoutRequesterInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
        team:
          $ref: "#/components/schemas/TeamUpdateOneRequiredWithoutRequestsNestedInput"
    TeamRequestUncheckedUpdateWithoutRequesterInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        teamId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
    TeamRequestUncheckedUpdateManyWithoutRequesterInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        teamId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
    TeamMemberCreateManyTeamInput:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        role:
          $ref: "#/components/schemas/TeamRole"
      required:
        - userId
    TeamTodosCreateManyTeamInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        creatorId:
          type: string
      required:
        - name
        - creatorId
    TeamRequestCreateManyTeamInput:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        requesterId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
      required:
        - requesterId
    TeamMemberUpdateWithoutTeamInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/TeamRole"
            - $ref: "#/components/schemas/EnumTeamRoleFieldUpdateOperationsInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutTeamMemberNestedInput"
    TeamMemberUncheckedUpdateWithoutTeamInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        userId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/TeamRole"
            - $ref: "#/components/schemas/EnumTeamRoleFieldUpdateOperationsInput"
    TeamMemberUncheckedUpdateManyWithoutTeamInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        userId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/TeamRole"
            - $ref: "#/components/schemas/EnumTeamRoleFieldUpdateOperationsInput"
    TeamTodosUpdateWithoutTeamInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completed:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        creator:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutCreateTeamTodosNestedIn\
            put"
    TeamTodosUncheckedUpdateWithoutTeamInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completed:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        creatorId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    TeamTodosUncheckedUpdateManyWithoutTeamInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completed:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        creatorId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    TeamRequestUpdateWithoutTeamInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
        requester:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutTeamRequestsNestedInput"
    TeamRequestUncheckedUpdateWithoutTeamInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        requesterId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
    TeamRequestUncheckedUpdateManyWithoutTeamInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        message:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        requesterId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/RequestStatus"
            - $ref: "#/components/schemas/EnumRequestStatusFieldUpdateOperationsInput"
    UserDefaultArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
    TeamDefaultArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TeamSelect"
        include:
          $ref: "#/components/schemas/TeamInclude"
    UserInclude:
      type: object
      properties:
        todos:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TodosFindManyArgs"
        sentRequests:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RequestFindManyArgs"
        receivedRequests:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RequestFindManyArgs"
        teamMember:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamMemberFindManyArgs"
        createTeamTodos:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamTodosFindManyArgs"
        ownedTeams:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamFindManyArgs"
        teamRequests:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamRequestFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountOutputTypeDefaultArgs"
    TodosInclude:
      type: object
      properties:
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
    RequestInclude:
      type: object
      properties:
        requester:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
        targetUser:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
    TeamTodosInclude:
      type: object
      properties:
        creator:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
        team:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamDefaultArgs"
    TeamInclude:
      type: object
      properties:
        createdBy:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
        members:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamMemberFindManyArgs"
        todos:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamTodosFindManyArgs"
        requests:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamRequestFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamCountOutputTypeDefaultArgs"
    TeamMemberInclude:
      type: object
      properties:
        team:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamDefaultArgs"
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
    TeamRequestInclude:
      type: object
      properties:
        team:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamDefaultArgs"
        requester:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
    UserCountOutputTypeSelect:
      type: object
      properties:
        todos:
          type: boolean
        sentRequests:
          type: boolean
        receivedRequests:
          type: boolean
        teamMember:
          type: boolean
        createTeamTodos:
          type: boolean
        ownedTeams:
          type: boolean
        teamRequests:
          type: boolean
    TeamCountOutputTypeSelect:
      type: object
      properties:
        members:
          type: boolean
        todos:
          type: boolean
        requests:
          type: boolean
    UserCountOutputTypeDefaultArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserCountOutputTypeSelect"
    TeamCountOutputTypeDefaultArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TeamCountOutputTypeSelect"
    UserSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        todos:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TodosFindManyArgs"
        sentRequests:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RequestFindManyArgs"
        receivedRequests:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RequestFindManyArgs"
        teamMember:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamMemberFindManyArgs"
        createTeamTodos:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamTodosFindManyArgs"
        ownedTeams:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamFindManyArgs"
        teamRequests:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamRequestFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountOutputTypeDefaultArgs"
    TodosSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        completed:
          type: boolean
        createdAt:
          type: boolean
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
        userId:
          type: boolean
    RequestSelect:
      type: object
      properties:
        id:
          type: boolean
        message:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        requester:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
        requesterId:
          type: boolean
        targetUser:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
        targetUserId:
          type: boolean
        status:
          type: boolean
    TeamTodosSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        completed:
          type: boolean
        createdAt:
          type: boolean
        creator:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
        creatorId:
          type: boolean
        team:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamDefaultArgs"
        teamId:
          type: boolean
    TeamSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        createdAt:
          type: boolean
        createdBy:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
        createdById:
          type: boolean
        members:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamMemberFindManyArgs"
        todos:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamTodosFindManyArgs"
        requests:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamRequestFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamCountOutputTypeDefaultArgs"
    TeamMemberSelect:
      type: object
      properties:
        id:
          type: boolean
        team:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamDefaultArgs"
        teamId:
          type: boolean
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
        userId:
          type: boolean
        role:
          type: boolean
    TeamRequestSelect:
      type: object
      properties:
        id:
          type: boolean
        message:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        team:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamDefaultArgs"
        teamId:
          type: boolean
        requester:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserDefaultArgs"
        requesterId:
          type: boolean
        status:
          type: boolean
    UserCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        _all:
          type: boolean
    UserMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
    UserMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
    TodosCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        completed:
          type: boolean
        createdAt:
          type: boolean
        userId:
          type: boolean
        _all:
          type: boolean
    TodosMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        completed:
          type: boolean
        createdAt:
          type: boolean
        userId:
          type: boolean
    TodosMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        completed:
          type: boolean
        createdAt:
          type: boolean
        userId:
          type: boolean
    RequestCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        message:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        requesterId:
          type: boolean
        targetUserId:
          type: boolean
        status:
          type: boolean
        _all:
          type: boolean
    RequestMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        message:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        requesterId:
          type: boolean
        targetUserId:
          type: boolean
        status:
          type: boolean
    RequestMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        message:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        requesterId:
          type: boolean
        targetUserId:
          type: boolean
        status:
          type: boolean
    TeamTodosCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        completed:
          type: boolean
        createdAt:
          type: boolean
        creatorId:
          type: boolean
        teamId:
          type: boolean
        _all:
          type: boolean
    TeamTodosMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        completed:
          type: boolean
        createdAt:
          type: boolean
        creatorId:
          type: boolean
        teamId:
          type: boolean
    TeamTodosMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        completed:
          type: boolean
        createdAt:
          type: boolean
        creatorId:
          type: boolean
        teamId:
          type: boolean
    TeamCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        createdAt:
          type: boolean
        createdById:
          type: boolean
        _all:
          type: boolean
    TeamMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        createdAt:
          type: boolean
        createdById:
          type: boolean
    TeamMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        createdAt:
          type: boolean
        createdById:
          type: boolean
    TeamMemberCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        teamId:
          type: boolean
        userId:
          type: boolean
        role:
          type: boolean
        _all:
          type: boolean
    TeamMemberMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        teamId:
          type: boolean
        userId:
          type: boolean
        role:
          type: boolean
    TeamMemberMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        teamId:
          type: boolean
        userId:
          type: boolean
        role:
          type: boolean
    TeamRequestCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        message:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        teamId:
          type: boolean
        requesterId:
          type: boolean
        status:
          type: boolean
        _all:
          type: boolean
    TeamRequestMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        message:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        teamId:
          type: boolean
        requesterId:
          type: boolean
        status:
          type: boolean
    TeamRequestMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        message:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        teamId:
          type: boolean
        requesterId:
          type: boolean
        status:
          type: boolean
    AggregateUser:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMaxAggregateOutputType"
    UserGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMaxAggregateOutputType"
      required:
        - id
    AggregateTodos:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TodosCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TodosMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TodosMaxAggregateOutputType"
    TodosGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        userId:
          type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TodosCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TodosMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TodosMaxAggregateOutputType"
      required:
        - id
        - name
        - completed
        - createdAt
        - userId
    AggregateRequest:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RequestCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RequestMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RequestMaxAggregateOutputType"
    RequestGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        requesterId:
          type: string
        targetUserId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RequestCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RequestMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RequestMaxAggregateOutputType"
      required:
        - id
        - createdAt
        - updatedAt
        - requesterId
        - targetUserId
        - status
    AggregateTeamTodos:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamTodosCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamTodosMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamTodosMaxAggregateOutputType"
    TeamTodosGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        creatorId:
          type: string
        teamId:
          type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamTodosCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamTodosMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamTodosMaxAggregateOutputType"
      required:
        - id
        - name
        - completed
        - createdAt
        - creatorId
        - teamId
    AggregateTeam:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamMaxAggregateOutputType"
    TeamGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        createdById:
          type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamMaxAggregateOutputType"
      required:
        - id
        - name
        - createdAt
        - createdById
    AggregateTeamMember:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamMemberCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamMemberMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamMemberMaxAggregateOutputType"
    TeamMemberGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        teamId:
          type: string
        userId:
          type: string
        role:
          $ref: "#/components/schemas/TeamRole"
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamMemberCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamMemberMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamMemberMaxAggregateOutputType"
      required:
        - id
        - teamId
        - userId
        - role
    AggregateTeamRequest:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamRequestCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamRequestMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamRequestMaxAggregateOutputType"
    TeamRequestGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        teamId:
          type: string
        requesterId:
          type: string
        status:
          $ref: "#/components/schemas/RequestStatus"
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamRequestCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamRequestMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamRequestMaxAggregateOutputType"
      required:
        - id
        - createdAt
        - updatedAt
        - teamId
        - requesterId
        - status
    UserCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - _all
    UserMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
    UserMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
    TodosCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        completed:
          type: integer
        createdAt:
          type: integer
        userId:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - completed
        - createdAt
        - userId
        - _all
    TodosMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        completed:
          oneOf:
            - type: "null"
            - type: boolean
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        userId:
          oneOf:
            - type: "null"
            - type: string
    TodosMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        completed:
          oneOf:
            - type: "null"
            - type: boolean
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        userId:
          oneOf:
            - type: "null"
            - type: string
    RequestCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        message:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        requesterId:
          type: integer
        targetUserId:
          type: integer
        status:
          type: integer
        _all:
          type: integer
      required:
        - id
        - message
        - createdAt
        - updatedAt
        - requesterId
        - targetUserId
        - status
        - _all
    RequestMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        requesterId:
          oneOf:
            - type: "null"
            - type: string
        targetUserId:
          oneOf:
            - type: "null"
            - type: string
        status:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RequestStatus"
    RequestMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        requesterId:
          oneOf:
            - type: "null"
            - type: string
        targetUserId:
          oneOf:
            - type: "null"
            - type: string
        status:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RequestStatus"
    TeamTodosCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        completed:
          type: integer
        createdAt:
          type: integer
        creatorId:
          type: integer
        teamId:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - completed
        - createdAt
        - creatorId
        - teamId
        - _all
    TeamTodosMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        completed:
          oneOf:
            - type: "null"
            - type: boolean
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        creatorId:
          oneOf:
            - type: "null"
            - type: string
        teamId:
          oneOf:
            - type: "null"
            - type: string
    TeamTodosMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        completed:
          oneOf:
            - type: "null"
            - type: boolean
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        creatorId:
          oneOf:
            - type: "null"
            - type: string
        teamId:
          oneOf:
            - type: "null"
            - type: string
    TeamCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        createdAt:
          type: integer
        createdById:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - createdAt
        - createdById
        - _all
    TeamMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - type: "null"
            - type: string
    TeamMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        createdById:
          oneOf:
            - type: "null"
            - type: string
    TeamMemberCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        teamId:
          type: integer
        userId:
          type: integer
        role:
          type: integer
        _all:
          type: integer
      required:
        - id
        - teamId
        - userId
        - role
        - _all
    TeamMemberMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        teamId:
          oneOf:
            - type: "null"
            - type: string
        userId:
          oneOf:
            - type: "null"
            - type: string
        role:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamRole"
    TeamMemberMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        teamId:
          oneOf:
            - type: "null"
            - type: string
        userId:
          oneOf:
            - type: "null"
            - type: string
        role:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TeamRole"
    TeamRequestCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        message:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        teamId:
          type: integer
        requesterId:
          type: integer
        status:
          type: integer
        _all:
          type: integer
      required:
        - id
        - message
        - createdAt
        - updatedAt
        - teamId
        - requesterId
        - status
        - _all
    TeamRequestMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        teamId:
          oneOf:
            - type: "null"
            - type: string
        requesterId:
          oneOf:
            - type: "null"
            - type: string
        status:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RequestStatus"
    TeamRequestMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        message:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        teamId:
          oneOf:
            - type: "null"
            - type: string
        requesterId:
          oneOf:
            - type: "null"
            - type: string
        status:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RequestStatus"
    _Meta:
      type: object
      description: Meta information about the request or response
      properties:
        serialization:
          description: Serialization metadata
      additionalProperties: true
    _Error:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - message
          properties:
            prisma:
              type: boolean
              description: Indicates if the error occurred during a Prisma call
            rejectedByPolicy:
              type: boolean
              description: Indicates if the error was due to rejection by a policy
            code:
              type: string
              description: Prisma error code. Only available when "prisma" field is true.
            message:
              type: string
              description: Error message
            reason:
              type: string
              description: Detailed error reason
            zodErrors:
              type: object
              additionalProperties: true
              description: Zod validation errors if the error is due to data validation
                failure
          additionalProperties: true
    BatchPayload:
      type: object
      properties:
        count:
          type: integer
    UserCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        data:
          $ref: "#/components/schemas/UserCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/UserCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        data:
          $ref: "#/components/schemas/UserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          $ref: "#/components/schemas/UserUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          $ref: "#/components/schemas/UserCreateInput"
        update:
          $ref: "#/components/schemas/UserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountAggregateInput"
        _min:
          $ref: "#/components/schemas/UserMinAggregateInput"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/UserScalarFieldEnum"
        having:
          $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountAggregateInput"
        _min:
          $ref: "#/components/schemas/UserMinAggregateInput"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/TodosSelect"
        include:
          $ref: "#/components/schemas/TodosInclude"
        data:
          $ref: "#/components/schemas/TodosCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TodosCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodosCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TodosSelect"
        include:
          $ref: "#/components/schemas/TodosInclude"
        where:
          $ref: "#/components/schemas/TodosWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TodosSelect"
        include:
          $ref: "#/components/schemas/TodosInclude"
        where:
          $ref: "#/components/schemas/TodosWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TodosSelect"
        include:
          $ref: "#/components/schemas/TodosInclude"
        where:
          $ref: "#/components/schemas/TodosWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/TodosSelect"
        include:
          $ref: "#/components/schemas/TodosInclude"
        where:
          $ref: "#/components/schemas/TodosWhereUniqueInput"
        data:
          $ref: "#/components/schemas/TodosUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/TodosWhereInput"
        data:
          $ref: "#/components/schemas/TodosUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/TodosSelect"
        include:
          $ref: "#/components/schemas/TodosInclude"
        where:
          $ref: "#/components/schemas/TodosWhereUniqueInput"
        create:
          $ref: "#/components/schemas/TodosCreateInput"
        update:
          $ref: "#/components/schemas/TodosUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TodosSelect"
        include:
          $ref: "#/components/schemas/TodosInclude"
        where:
          $ref: "#/components/schemas/TodosWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodosWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TodosSelect"
        where:
          $ref: "#/components/schemas/TodosWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodosWhereInput"
        orderBy:
          $ref: "#/components/schemas/TodosOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/TodosWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TodosCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TodosMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TodosMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodosGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodosWhereInput"
        orderBy:
          $ref: "#/components/schemas/TodosOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/TodosScalarFieldEnum"
        having:
          $ref: "#/components/schemas/TodosScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TodosCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TodosMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TodosMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/RequestSelect"
        include:
          $ref: "#/components/schemas/RequestInclude"
        data:
          $ref: "#/components/schemas/RequestCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/RequestCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/RequestCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/RequestSelect"
        include:
          $ref: "#/components/schemas/RequestInclude"
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/RequestSelect"
        include:
          $ref: "#/components/schemas/RequestInclude"
        where:
          $ref: "#/components/schemas/RequestWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/RequestSelect"
        include:
          $ref: "#/components/schemas/RequestInclude"
        where:
          $ref: "#/components/schemas/RequestWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/RequestSelect"
        include:
          $ref: "#/components/schemas/RequestInclude"
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        data:
          $ref: "#/components/schemas/RequestUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereInput"
        data:
          $ref: "#/components/schemas/RequestUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/RequestSelect"
        include:
          $ref: "#/components/schemas/RequestInclude"
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        create:
          $ref: "#/components/schemas/RequestCreateInput"
        update:
          $ref: "#/components/schemas/RequestUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/RequestSelect"
        include:
          $ref: "#/components/schemas/RequestInclude"
        where:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/RequestSelect"
        where:
          $ref: "#/components/schemas/RequestWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereInput"
        orderBy:
          $ref: "#/components/schemas/RequestOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/RequestWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RequestCountAggregateInput"
        _min:
          $ref: "#/components/schemas/RequestMinAggregateInput"
        _max:
          $ref: "#/components/schemas/RequestMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RequestGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RequestWhereInput"
        orderBy:
          $ref: "#/components/schemas/RequestOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/RequestScalarFieldEnum"
        having:
          $ref: "#/components/schemas/RequestScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RequestCountAggregateInput"
        _min:
          $ref: "#/components/schemas/RequestMinAggregateInput"
        _max:
          $ref: "#/components/schemas/RequestMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamTodosCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/TeamTodosSelect"
        include:
          $ref: "#/components/schemas/TeamTodosInclude"
        data:
          $ref: "#/components/schemas/TeamTodosCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamTodosCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamTodosCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamTodosCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamTodosFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TeamTodosSelect"
        include:
          $ref: "#/components/schemas/TeamTodosInclude"
        where:
          $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamTodosFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TeamTodosSelect"
        include:
          $ref: "#/components/schemas/TeamTodosInclude"
        where:
          $ref: "#/components/schemas/TeamTodosWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamTodosFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TeamTodosSelect"
        include:
          $ref: "#/components/schemas/TeamTodosInclude"
        where:
          $ref: "#/components/schemas/TeamTodosWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamTodosUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/TeamTodosSelect"
        include:
          $ref: "#/components/schemas/TeamTodosInclude"
        where:
          $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        data:
          $ref: "#/components/schemas/TeamTodosUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamTodosUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/TeamTodosWhereInput"
        data:
          $ref: "#/components/schemas/TeamTodosUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamTodosUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/TeamTodosSelect"
        include:
          $ref: "#/components/schemas/TeamTodosInclude"
        where:
          $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        create:
          $ref: "#/components/schemas/TeamTodosCreateInput"
        update:
          $ref: "#/components/schemas/TeamTodosUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamTodosDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TeamTodosSelect"
        include:
          $ref: "#/components/schemas/TeamTodosInclude"
        where:
          $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamTodosDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamTodosWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamTodosCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TeamTodosSelect"
        where:
          $ref: "#/components/schemas/TeamTodosWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamTodosAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamTodosWhereInput"
        orderBy:
          $ref: "#/components/schemas/TeamTodosOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/TeamTodosWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamTodosCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TeamTodosMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TeamTodosMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamTodosGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamTodosWhereInput"
        orderBy:
          $ref: "#/components/schemas/TeamTodosOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/TeamTodosScalarFieldEnum"
        having:
          $ref: "#/components/schemas/TeamTodosScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamTodosCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TeamTodosMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TeamTodosMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/TeamSelect"
        include:
          $ref: "#/components/schemas/TeamInclude"
        data:
          $ref: "#/components/schemas/TeamCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TeamSelect"
        include:
          $ref: "#/components/schemas/TeamInclude"
        where:
          $ref: "#/components/schemas/TeamWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TeamSelect"
        include:
          $ref: "#/components/schemas/TeamInclude"
        where:
          $ref: "#/components/schemas/TeamWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TeamSelect"
        include:
          $ref: "#/components/schemas/TeamInclude"
        where:
          $ref: "#/components/schemas/TeamWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/TeamSelect"
        include:
          $ref: "#/components/schemas/TeamInclude"
        where:
          $ref: "#/components/schemas/TeamWhereUniqueInput"
        data:
          $ref: "#/components/schemas/TeamUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/TeamWhereInput"
        data:
          $ref: "#/components/schemas/TeamUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/TeamSelect"
        include:
          $ref: "#/components/schemas/TeamInclude"
        where:
          $ref: "#/components/schemas/TeamWhereUniqueInput"
        create:
          $ref: "#/components/schemas/TeamCreateInput"
        update:
          $ref: "#/components/schemas/TeamUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TeamSelect"
        include:
          $ref: "#/components/schemas/TeamInclude"
        where:
          $ref: "#/components/schemas/TeamWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TeamSelect"
        where:
          $ref: "#/components/schemas/TeamWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamWhereInput"
        orderBy:
          $ref: "#/components/schemas/TeamOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/TeamWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TeamMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TeamMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamWhereInput"
        orderBy:
          $ref: "#/components/schemas/TeamOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/TeamScalarFieldEnum"
        having:
          $ref: "#/components/schemas/TeamScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TeamMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TeamMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamMemberCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/TeamMemberSelect"
        include:
          $ref: "#/components/schemas/TeamMemberInclude"
        data:
          $ref: "#/components/schemas/TeamMemberCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamMemberCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamMemberCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamMemberCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamMemberFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TeamMemberSelect"
        include:
          $ref: "#/components/schemas/TeamMemberInclude"
        where:
          $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamMemberFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TeamMemberSelect"
        include:
          $ref: "#/components/schemas/TeamMemberInclude"
        where:
          $ref: "#/components/schemas/TeamMemberWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamMemberFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TeamMemberSelect"
        include:
          $ref: "#/components/schemas/TeamMemberInclude"
        where:
          $ref: "#/components/schemas/TeamMemberWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamMemberUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/TeamMemberSelect"
        include:
          $ref: "#/components/schemas/TeamMemberInclude"
        where:
          $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        data:
          $ref: "#/components/schemas/TeamMemberUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamMemberUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/TeamMemberWhereInput"
        data:
          $ref: "#/components/schemas/TeamMemberUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamMemberUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/TeamMemberSelect"
        include:
          $ref: "#/components/schemas/TeamMemberInclude"
        where:
          $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        create:
          $ref: "#/components/schemas/TeamMemberCreateInput"
        update:
          $ref: "#/components/schemas/TeamMemberUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamMemberDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TeamMemberSelect"
        include:
          $ref: "#/components/schemas/TeamMemberInclude"
        where:
          $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamMemberDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamMemberWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamMemberCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TeamMemberSelect"
        where:
          $ref: "#/components/schemas/TeamMemberWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamMemberAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamMemberWhereInput"
        orderBy:
          $ref: "#/components/schemas/TeamMemberOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/TeamMemberWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamMemberCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TeamMemberMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TeamMemberMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamMemberGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamMemberWhereInput"
        orderBy:
          $ref: "#/components/schemas/TeamMemberOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/TeamMemberScalarFieldEnum"
        having:
          $ref: "#/components/schemas/TeamMemberScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamMemberCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TeamMemberMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TeamMemberMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamRequestCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/TeamRequestSelect"
        include:
          $ref: "#/components/schemas/TeamRequestInclude"
        data:
          $ref: "#/components/schemas/TeamRequestCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamRequestCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TeamRequestCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/TeamRequestCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamRequestFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TeamRequestSelect"
        include:
          $ref: "#/components/schemas/TeamRequestInclude"
        where:
          $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamRequestFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TeamRequestSelect"
        include:
          $ref: "#/components/schemas/TeamRequestInclude"
        where:
          $ref: "#/components/schemas/TeamRequestWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamRequestFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TeamRequestSelect"
        include:
          $ref: "#/components/schemas/TeamRequestInclude"
        where:
          $ref: "#/components/schemas/TeamRequestWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamRequestUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/TeamRequestSelect"
        include:
          $ref: "#/components/schemas/TeamRequestInclude"
        where:
          $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        data:
          $ref: "#/components/schemas/TeamRequestUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamRequestUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/TeamRequestWhereInput"
        data:
          $ref: "#/components/schemas/TeamRequestUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamRequestUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/TeamRequestSelect"
        include:
          $ref: "#/components/schemas/TeamRequestInclude"
        where:
          $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        create:
          $ref: "#/components/schemas/TeamRequestCreateInput"
        update:
          $ref: "#/components/schemas/TeamRequestUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamRequestDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TeamRequestSelect"
        include:
          $ref: "#/components/schemas/TeamRequestInclude"
        where:
          $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamRequestDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamRequestWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamRequestCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TeamRequestSelect"
        where:
          $ref: "#/components/schemas/TeamRequestWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamRequestAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamRequestWhereInput"
        orderBy:
          $ref: "#/components/schemas/TeamRequestOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/TeamRequestWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamRequestCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TeamRequestMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TeamRequestMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TeamRequestGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TeamRequestWhereInput"
        orderBy:
          $ref: "#/components/schemas/TeamRequestOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/TeamRequestScalarFieldEnum"
        having:
          $ref: "#/components/schemas/TeamRequestScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TeamRequestCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TeamRequestMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TeamRequestMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
paths:
  /user/create:
    post:
      operationId: createUser
      description: Create a new User
      tags:
        - user
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateArgs"
  /user/createMany:
    post:
      operationId: createManyUser
      description: Create several User
      tags:
        - user
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateManyArgs"
  /user/findUnique:
    get:
      operationId: findUniqueUser
      description: Find one unique User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/findFirst:
    get:
      operationId: findFirstUser
      description: Find the first User matching the given condition
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/findMany:
    get:
      operationId: findManyUser
      description: Find a list of User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/update:
    patch:
      operationId: updateUser
      description: Update a User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateArgs"
  /user/updateMany:
    patch:
      operationId: updateManyUser
      description: Update Users matching the given condition
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateManyArgs"
  /user/upsert:
    post:
      operationId: upsertUser
      description: Upsert a User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpsertArgs"
  /user/delete:
    delete:
      operationId: deleteUser
      description: Delete one unique User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/deleteMany:
    delete:
      operationId: deleteManyUser
      description: Delete Users matching the given condition
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/count:
    get:
      operationId: countUser
      description: Find a list of User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/UserCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/aggregate:
    get:
      operationId: aggregateUser
      description: Aggregate Users
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateUser"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/groupBy:
    get:
      operationId: groupByUser
      description: Group Users by fields
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /todos/create:
    post:
      operationId: createTodos
      description: Create a new Todos
      tags:
        - todos
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Todos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodosCreateArgs"
  /todos/createMany:
    post:
      operationId: createManyTodos
      description: Create several Todos
      tags:
        - todos
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodosCreateManyArgs"
  /todos/findUnique:
    get:
      operationId: findUniqueTodos
      description: Find one unique Todos
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Todos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodosFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /todos/findFirst:
    get:
      operationId: findFirstTodos
      description: Find the first Todos matching the given condition
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Todos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodosFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /todos/findMany:
    get:
      operationId: findManyTodos
      description: Find a list of Todos
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Todos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodosFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /todos/update:
    patch:
      operationId: updateTodos
      description: Update a Todos
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Todos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodosUpdateArgs"
  /todos/updateMany:
    patch:
      operationId: updateManyTodos
      description: Update Todoss matching the given condition
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodosUpdateManyArgs"
  /todos/upsert:
    post:
      operationId: upsertTodos
      description: Upsert a Todos
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Todos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodosUpsertArgs"
  /todos/delete:
    delete:
      operationId: deleteTodos
      description: Delete one unique Todos
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Todos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodosDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /todos/deleteMany:
    delete:
      operationId: deleteManyTodos
      description: Delete Todoss matching the given condition
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodosDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /todos/count:
    get:
      operationId: countTodos
      description: Find a list of Todos
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/TodosCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodosCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /todos/aggregate:
    get:
      operationId: aggregateTodos
      description: Aggregate Todoss
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateTodos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodosAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /todos/groupBy:
    get:
      operationId: groupByTodos
      description: Group Todoss by fields
      tags:
        - todos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TodosGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodosGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /request/create:
    post:
      operationId: createRequest
      description: Create a new Request
      tags:
        - request
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Request"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestCreateArgs"
  /request/createMany:
    post:
      operationId: createManyRequest
      description: Create several Request
      tags:
        - request
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestCreateManyArgs"
  /request/findUnique:
    get:
      operationId: findUniqueRequest
      description: Find one unique Request
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Request"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /request/findFirst:
    get:
      operationId: findFirstRequest
      description: Find the first Request matching the given condition
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Request"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /request/findMany:
    get:
      operationId: findManyRequest
      description: Find a list of Request
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Request"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /request/update:
    patch:
      operationId: updateRequest
      description: Update a Request
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Request"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestUpdateArgs"
  /request/updateMany:
    patch:
      operationId: updateManyRequest
      description: Update Requests matching the given condition
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestUpdateManyArgs"
  /request/upsert:
    post:
      operationId: upsertRequest
      description: Upsert a Request
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Request"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestUpsertArgs"
  /request/delete:
    delete:
      operationId: deleteRequest
      description: Delete one unique Request
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Request"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /request/deleteMany:
    delete:
      operationId: deleteManyRequest
      description: Delete Requests matching the given condition
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /request/count:
    get:
      operationId: countRequest
      description: Find a list of Request
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/RequestCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /request/aggregate:
    get:
      operationId: aggregateRequest
      description: Aggregate Requests
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateRequest"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /request/groupBy:
    get:
      operationId: groupByRequest
      description: Group Requests by fields
      tags:
        - request
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/RequestGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamTodos/create:
    post:
      operationId: createTeamTodos
      description: Create a new TeamTodos
      tags:
        - teamTodos
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TeamTodos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamTodosCreateArgs"
  /teamTodos/createMany:
    post:
      operationId: createManyTeamTodos
      description: Create several TeamTodos
      tags:
        - teamTodos
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamTodosCreateManyArgs"
  /teamTodos/findUnique:
    get:
      operationId: findUniqueTeamTodos
      description: Find one unique TeamTodos
      tags:
        - teamTodos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TeamTodos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamTodosFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamTodos/findFirst:
    get:
      operationId: findFirstTeamTodos
      description: Find the first TeamTodos matching the given condition
      tags:
        - teamTodos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TeamTodos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamTodosFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamTodos/findMany:
    get:
      operationId: findManyTeamTodos
      description: Find a list of TeamTodos
      tags:
        - teamTodos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TeamTodos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamTodosFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamTodos/update:
    patch:
      operationId: updateTeamTodos
      description: Update a TeamTodos
      tags:
        - teamTodos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TeamTodos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamTodosUpdateArgs"
  /teamTodos/updateMany:
    patch:
      operationId: updateManyTeamTodos
      description: Update TeamTodoss matching the given condition
      tags:
        - teamTodos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamTodosUpdateManyArgs"
  /teamTodos/upsert:
    post:
      operationId: upsertTeamTodos
      description: Upsert a TeamTodos
      tags:
        - teamTodos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TeamTodos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamTodosUpsertArgs"
  /teamTodos/delete:
    delete:
      operationId: deleteTeamTodos
      description: Delete one unique TeamTodos
      tags:
        - teamTodos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TeamTodos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamTodosDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamTodos/deleteMany:
    delete:
      operationId: deleteManyTeamTodos
      description: Delete TeamTodoss matching the given condition
      tags:
        - teamTodos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamTodosDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamTodos/count:
    get:
      operationId: countTeamTodos
      description: Find a list of TeamTodos
      tags:
        - teamTodos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/TeamTodosCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamTodosCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamTodos/aggregate:
    get:
      operationId: aggregateTeamTodos
      description: Aggregate TeamTodoss
      tags:
        - teamTodos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateTeamTodos"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamTodosAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamTodos/groupBy:
    get:
      operationId: groupByTeamTodos
      description: Group TeamTodoss by fields
      tags:
        - teamTodos
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TeamTodosGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamTodosGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /team/create:
    post:
      operationId: createTeam
      description: Create a new Team
      tags:
        - team
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Team"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamCreateArgs"
  /team/createMany:
    post:
      operationId: createManyTeam
      description: Create several Team
      tags:
        - team
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamCreateManyArgs"
  /team/findUnique:
    get:
      operationId: findUniqueTeam
      description: Find one unique Team
      tags:
        - team
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Team"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /team/findFirst:
    get:
      operationId: findFirstTeam
      description: Find the first Team matching the given condition
      tags:
        - team
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Team"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /team/findMany:
    get:
      operationId: findManyTeam
      description: Find a list of Team
      tags:
        - team
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Team"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /team/update:
    patch:
      operationId: updateTeam
      description: Update a Team
      tags:
        - team
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Team"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamUpdateArgs"
  /team/updateMany:
    patch:
      operationId: updateManyTeam
      description: Update Teams matching the given condition
      tags:
        - team
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamUpdateManyArgs"
  /team/upsert:
    post:
      operationId: upsertTeam
      description: Upsert a Team
      tags:
        - team
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Team"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamUpsertArgs"
  /team/delete:
    delete:
      operationId: deleteTeam
      description: Delete one unique Team
      tags:
        - team
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Team"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /team/deleteMany:
    delete:
      operationId: deleteManyTeam
      description: Delete Teams matching the given condition
      tags:
        - team
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /team/count:
    get:
      operationId: countTeam
      description: Find a list of Team
      tags:
        - team
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/TeamCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /team/aggregate:
    get:
      operationId: aggregateTeam
      description: Aggregate Teams
      tags:
        - team
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateTeam"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /team/groupBy:
    get:
      operationId: groupByTeam
      description: Group Teams by fields
      tags:
        - team
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TeamGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamMember/create:
    post:
      operationId: createTeamMember
      description: Create a new TeamMember
      tags:
        - teamMember
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TeamMember"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamMemberCreateArgs"
  /teamMember/createMany:
    post:
      operationId: createManyTeamMember
      description: Create several TeamMember
      tags:
        - teamMember
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamMemberCreateManyArgs"
  /teamMember/findUnique:
    get:
      operationId: findUniqueTeamMember
      description: Find one unique TeamMember
      tags:
        - teamMember
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TeamMember"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamMemberFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamMember/findFirst:
    get:
      operationId: findFirstTeamMember
      description: Find the first TeamMember matching the given condition
      tags:
        - teamMember
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TeamMember"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamMemberFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamMember/findMany:
    get:
      operationId: findManyTeamMember
      description: Find a list of TeamMember
      tags:
        - teamMember
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TeamMember"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamMemberFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamMember/update:
    patch:
      operationId: updateTeamMember
      description: Update a TeamMember
      tags:
        - teamMember
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TeamMember"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamMemberUpdateArgs"
  /teamMember/updateMany:
    patch:
      operationId: updateManyTeamMember
      description: Update TeamMembers matching the given condition
      tags:
        - teamMember
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamMemberUpdateManyArgs"
  /teamMember/upsert:
    post:
      operationId: upsertTeamMember
      description: Upsert a TeamMember
      tags:
        - teamMember
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TeamMember"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamMemberUpsertArgs"
  /teamMember/delete:
    delete:
      operationId: deleteTeamMember
      description: Delete one unique TeamMember
      tags:
        - teamMember
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TeamMember"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamMemberDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamMember/deleteMany:
    delete:
      operationId: deleteManyTeamMember
      description: Delete TeamMembers matching the given condition
      tags:
        - teamMember
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamMemberDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamMember/count:
    get:
      operationId: countTeamMember
      description: Find a list of TeamMember
      tags:
        - teamMember
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/TeamMemberCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamMemberCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamMember/aggregate:
    get:
      operationId: aggregateTeamMember
      description: Aggregate TeamMembers
      tags:
        - teamMember
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateTeamMember"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamMemberAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamMember/groupBy:
    get:
      operationId: groupByTeamMember
      description: Group TeamMembers by fields
      tags:
        - teamMember
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TeamMemberGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamMemberGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamRequest/create:
    post:
      operationId: createTeamRequest
      description: Create a new TeamRequest
      tags:
        - teamRequest
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TeamRequest"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamRequestCreateArgs"
  /teamRequest/createMany:
    post:
      operationId: createManyTeamRequest
      description: Create several TeamRequest
      tags:
        - teamRequest
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamRequestCreateManyArgs"
  /teamRequest/findUnique:
    get:
      operationId: findUniqueTeamRequest
      description: Find one unique TeamRequest
      tags:
        - teamRequest
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TeamRequest"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamRequestFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamRequest/findFirst:
    get:
      operationId: findFirstTeamRequest
      description: Find the first TeamRequest matching the given condition
      tags:
        - teamRequest
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TeamRequest"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamRequestFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamRequest/findMany:
    get:
      operationId: findManyTeamRequest
      description: Find a list of TeamRequest
      tags:
        - teamRequest
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TeamRequest"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamRequestFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamRequest/update:
    patch:
      operationId: updateTeamRequest
      description: Update a TeamRequest
      tags:
        - teamRequest
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TeamRequest"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamRequestUpdateArgs"
  /teamRequest/updateMany:
    patch:
      operationId: updateManyTeamRequest
      description: Update TeamRequests matching the given condition
      tags:
        - teamRequest
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamRequestUpdateManyArgs"
  /teamRequest/upsert:
    post:
      operationId: upsertTeamRequest
      description: Upsert a TeamRequest
      tags:
        - teamRequest
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TeamRequest"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamRequestUpsertArgs"
  /teamRequest/delete:
    delete:
      operationId: deleteTeamRequest
      description: Delete one unique TeamRequest
      tags:
        - teamRequest
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TeamRequest"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamRequestDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamRequest/deleteMany:
    delete:
      operationId: deleteManyTeamRequest
      description: Delete TeamRequests matching the given condition
      tags:
        - teamRequest
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamRequestDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamRequest/count:
    get:
      operationId: countTeamRequest
      description: Find a list of TeamRequest
      tags:
        - teamRequest
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/TeamRequestCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamRequestCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamRequest/aggregate:
    get:
      operationId: aggregateTeamRequest
      description: Aggregate TeamRequests
      tags:
        - teamRequest
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateTeamRequest"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamRequestAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /teamRequest/groupBy:
    get:
      operationId: groupByTeamRequest
      description: Group TeamRequests by fields
      tags:
        - teamRequest
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TeamRequestGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamRequestGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
