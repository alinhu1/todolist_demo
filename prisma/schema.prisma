//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

generator task {
  provider = "node --import=tsx ./generator/index.ts"
}

enum RequestStatus {
  pending
  approved
  rejected
}

model User {
  id               String    @id()
  name             String?
  todos            Todos[]
  sentRequests     Request[] @relation("SentRequests")
  receivedRequests Request[] @relation("ReceivedRequests")
}

model Todos {
  id        String   @id() @default(cuid())
  name      String
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Request {
  id           String        @id() @default(cuid())
  requester    User          @relation("SentRequests", fields: [requesterId], references: [id])
  requesterId  String
  targetUser   User          @relation("ReceivedRequests", fields: [targetUserId], references: [id])
  targetUserId String
  status       RequestStatus
  message      String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt()
}
